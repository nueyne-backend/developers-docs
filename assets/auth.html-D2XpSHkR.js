import{_ as d,c,a as r,b as n,e as a,d as e,w as l,r as u,o as m}from"./app-BlYON7qD.js";const v={};function g(b,s){const o=u("Badge"),p=u("Tabs");return m(),c("div",null,[s[120]||(s[120]=r(`<h1 id="authentication" tabindex="-1"><a class="header-anchor" href="#authentication"><span><strong>Authentication</strong></span></a></h1><p>This page describes the APIs related to authentication for the LUX project.</p><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span><strong>Introduction</strong></span></a></h2><p>The LUX Authentication API provides functions to perform authentication-related tasks such as user registration (sign-up), social media sign-up, login, and SMS number verification.</p><h2 id="authentication-1" tabindex="-1"><a class="header-anchor" href="#authentication-1"><span><strong>Authentication</strong></span></a></h2><p>Some authentication APIs require an authentication token. Please include the authentication token in the <code>Authorization</code> header to make authenticated API requests.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">Authorization: Bearer your_token_here</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Replace <code>your_token_here</code> with the access token obtained during the authentication process.</p><h2 id="endpoints" tabindex="-1"><a class="header-anchor" href="#endpoints"><span><strong>Endpoints</strong></span></a></h2><h3 id="signin" tabindex="-1"><a class="header-anchor" href="#signin"><span><strong>Signin</strong></span></a></h3><p>This API allows a user to log in with the provided email and password.</p><div class="api-endpoint"><span class="api-method">POST</span> /api/v1/lux/auth/email/signin </div><p><strong>Body Parameters</strong></p>`,13)),n("table",null,[s[8]||(s[8]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[0]||(s[0]=n("code",null,"username",-1)),s[1]||(s[1]=e()),a(o,{type:"danger",text:"required"})]),s[2]||(s[2]=n("td",null,"string",-1)),s[3]||(s[3]=n("td",null,"Email value",-1))]),n("tr",null,[n("td",null,[s[4]||(s[4]=n("code",null,"password",-1)),s[5]||(s[5]=e()),a(o,{type:"danger",text:"required"})]),s[6]||(s[6]=n("td",null,"string",-1)),s[7]||(s[7]=n("td",null,"Password value",-1))])])]),s[121]||(s[121]=r(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/auth/email/signin</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span></span>
<span class="line">{</span>
<span class="line">  &quot;username &quot;: &quot;string&quot;,</span>
<span class="line">  &quot;password &quot;: &quot;string&quot;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),a(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:l(({value:t,isActive:i})=>s[9]||(s[9]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:l(({value:t,isActive:i})=>s[10]||(s[10]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:l(({value:t,isActive:i})=>s[11]||(s[11]=[n("p",null,[e("If the login is successful, the API provides an "),n("code",null,"access_token"),e(" and a refresh_token. Use "),n("code",null,"access_token"),e(" for API calls. The "),n("code",null,"refresh_token"),e(" is used to renew the "),n("code",null,"access_token"),e(" upon expiration.")],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"access_token"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"expires_in"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"refresh_token"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"refresh_expires_in"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"token_type"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:l(({value:t,isActive:i})=>s[12]||(s[12]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages based on the HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Password is invalid"),n("td",null,"Incorrect password.")]),n("tr",null,[n("td",null,"401"),n("td",null,"Sign-up not completed"),n("td",null,"Sign-up is not completed.")]),n("tr",null,[n("td",null,"403"),n("td",null,"SMS verification required"),n("td",null,"SMS verification is not completed.")]),n("tr",null,[n("td",null,"404"),n("td",null,"User not found"),n("td",null,"User could not be found.")]),n("tr",null,[n("td",null,"410"),n("td",null,"User is Deleted"),n("td",null,"Account has been deleted.")]),n("tr",null,[n("td",null,"423"),n("td",null,"Access denied. Account blocked"),n("td",null,"Account has been blocked.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Password is invalid"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[122]||(s[122]=n("h3",{id:"token-refresh",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#token-refresh"},[n("span",null,[n("strong",null,"Token Refresh")])])],-1)),s[123]||(s[123]=n("p",null,'This is an API that reissues a token using a refresh_token. If the user information in the refresh_token matches, but the token itself does not match the refresh_token stored in the DB (database), it is considered a duplicate login, and the refresh_token in the DB is deleted. On the front-end, a "401 Refresh token is not valid" error should be handled by branching to a logout process.',-1)),s[124]||(s[124]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),e(" /api/v1/lux/auth/refresh-token ")],-1)),s[125]||(s[125]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[17]||(s[17]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[13]||(s[13]=n("code",null,"refresh_token",-1)),s[14]||(s[14]=e()),a(o,{type:"danger",text:"required"})]),s[15]||(s[15]=n("td",null,"string",-1)),s[16]||(s[16]=n("td",null,"Original Refresh Token",-1))])])]),s[126]||(s[126]=r(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/auth/refresh-token</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),a(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:l(({value:t,isActive:i})=>s[18]||(s[18]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:l(({value:t,isActive:i})=>s[19]||(s[19]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:l(({value:t,isActive:i})=>s[20]||(s[20]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"access_token"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"access_token"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"expires_in"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"900"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token comment"},"// 15 minutes ")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"refresh_token"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"new_refresh_token"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"refresh_expires_in"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"1209600"),n("span",{class:"token punctuation"},","),e("  "),n("span",{class:"token comment"},"// 2 weeks")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"uuid"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"token_type"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"bearer"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:l(({value:t,isActive:i})=>s[21]||(s[21]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages based on the HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Token is expired"),n("td",null,"refresh_token is expired, proceed logout process.")]),n("tr",null,[n("td",null,"401"),n("td",null,"Could not validate credentials"),n("td",null,"wrong refresh_token, proceed logout process.")]),n("tr",null,[n("td",null,"401"),n("td",null,"Refresh token is not valid"),n("td",null,"Considered a duplicate login, proceed logout process.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Refresh token is not valid"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[127]||(s[127]=n("h3",{id:"send-sms-verification-message",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#send-sms-verification-message"},[n("span",null,[n("strong",null,"Send SMS Verification Message")])])],-1)),s[128]||(s[128]=n("p",null,"This API sends an SMS verification message to the provided phone number. It is used not only for signup but also to help users retrieve lost accounts.",-1)),s[129]||(s[129]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),e(" /api/v1/lux/auth/send-sms-auth ")],-1)),s[130]||(s[130]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[26]||(s[26]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[22]||(s[22]=n("code",null,"phone",-1)),s[23]||(s[23]=e()),a(o,{type:"danger",text:"required"})]),s[24]||(s[24]=n("td",null,"string",-1)),s[25]||(s[25]=n("td",null,[e("Phone number to send the verification message(E.164 format) "),n("br"),e(" - ex: +1012345678")],-1))])])]),s[131]||(s[131]=r(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/auth/send-sms-auth</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;+1012345678&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),a(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:l(({value:t,isActive:i})=>s[27]||(s[27]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:l(({value:t,isActive:i})=>s[28]||(s[28]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:l(({value:t,isActive:i})=>s[29]||(s[29]=[n("p",null,[e("If the SMS verification message is successfully sent, it returns a "),n("code",null,"true"),e(".")],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[e("  "),n("span",{class:"token boolean"},"true")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab1:l(({value:t,isActive:i})=>s[30]||(s[30]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages based on the HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Phone number is invalid"),n("td",null,"Phone number format is invalid")]),n("tr",null,[n("td",null,"409"),n("td",null,"Phone number is already registered"),n("td",null,"This phone number is already registered")]),n("tr",null,[n("td",null,"409"),n("td",null,"Failed to send SMS"),n("td",null,"Send sms message with Twillo service has failed")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Phone number is invalid"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[132]||(s[132]=n("h3",{id:"verify-sms-verification-code",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#verify-sms-verification-code"},[n("span",null,[n("strong",null,"Verify SMS Verification Code")])])],-1)),s[133]||(s[133]=n("p",null,"This API verifies the SMS verification code sent to the user's phone number.",-1)),s[134]||(s[134]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),e(" /api/v1/lux/auth/phone-number-validation ")],-1)),s[135]||(s[135]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[39]||(s[39]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[31]||(s[31]=n("code",null,"phone",-1)),s[32]||(s[32]=e()),a(o,{type:"danger",text:"required"})]),s[33]||(s[33]=n("td",null,"string",-1)),s[34]||(s[34]=n("td",null,[e("Phone number to send the verification message(E.164 format) "),n("br"),e(" - ex: +14155552671")],-1))]),n("tr",null,[n("td",null,[s[35]||(s[35]=n("code",null,"validnum",-1)),s[36]||(s[36]=e()),a(o,{type:"danger",text:"required"})]),s[37]||(s[37]=n("td",null,"string",-1)),s[38]||(s[38]=n("td",null,"6-digit verification code received via SMS",-1))])])]),s[136]||(s[136]=r(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/auth/phone-number-validation</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;+1012345678&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;validnum&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123456&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),a(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:l(({value:t,isActive:i})=>s[40]||(s[40]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:l(({value:t,isActive:i})=>s[41]||(s[41]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:l(({value:t,isActive:i})=>s[42]||(s[42]=[n("p",null,[e("If the SMS verification code is successfully verified, it returns "),n("code",null,"valid_token"),e(". When calling the "),n("a",{href:"#email-signup"},"signup"),e(", include the "),n("code",null,"valid_token"),e(" in the Authorization header.")],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"valid_token"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:l(({value:t,isActive:i})=>s[43]||(s[43]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages based on the HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Validation code is expired"),n("td",null,"The code has expired.")]),n("tr",null,[n("td",null,"400"),n("td",null,"Validation code is invalid"),n("td",null,"The code provided is invalid.")]),n("tr",null,[n("td",null,"403"),n("td",null,"User previously deleted"),n("td",null,"Account has been deleted.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Phone number is already registered"),n("td",null,"Already signed up phone number.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Validation code is expired"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[137]||(s[137]=n("h3",{id:"email-signup",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#email-signup"},[n("span",null,[n("strong",null,"Email Signup")])])],-1)),s[138]||(s[138]=n("p",null,[e("This API allows a user to complete the signup process with an email and password. Include the "),n("code",null,"access_token"),e(" in the Authorization header for authentication.")],-1)),s[139]||(s[139]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),e(" /api/v1/lux/auth/email/signup ")],-1)),s[140]||(s[140]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[s[48]||(s[48]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[44]||(s[44]=n("code",null,"Authorization",-1)),s[45]||(s[45]=e()),a(o,{type:"danger",text:"required"})]),s[46]||(s[46]=n("td",null,"Bearer",-1)),s[47]||(s[47]=n("td",null,"valid_token",-1))])])]),s[141]||(s[141]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[93]||(s[93]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[49]||(s[49]=n("code",null,"email",-1)),s[50]||(s[50]=e()),a(o,{type:"danger",text:"required"})]),s[51]||(s[51]=n("td",null,"string",-1)),s[52]||(s[52]=n("td",null,"Email address",-1))]),n("tr",null,[n("td",null,[s[53]||(s[53]=n("code",null,"password",-1)),s[54]||(s[54]=e()),a(o,{type:"danger",text:"required"})]),s[55]||(s[55]=n("td",null,"string",-1)),s[56]||(s[56]=n("td",null,"Password value.",-1))]),n("tr",null,[n("td",null,[s[57]||(s[57]=n("code",null,"first_name",-1)),s[58]||(s[58]=e()),a(o,{type:"danger",text:"required"})]),s[59]||(s[59]=n("td",null,"string",-1)),s[60]||(s[60]=n("td",null,"User's Fullname",-1))]),n("tr",null,[n("td",null,[s[61]||(s[61]=n("code",null,"last_name",-1)),s[62]||(s[62]=e()),a(o,{type:"danger",text:"required"})]),s[63]||(s[63]=n("td",null,"string",-1)),s[64]||(s[64]=n("td",null,"Depreacted, please send empty string",-1))]),n("tr",null,[n("td",null,[s[65]||(s[65]=n("code",null,"birthdate",-1)),s[66]||(s[66]=e()),a(o,{type:"danger",text:"required"})]),s[67]||(s[67]=n("td",null,"string",-1)),s[68]||(s[68]=n("td",null,[e("User's birthdate in the format(yyyymmdd) "),n("br"),e(" - ex : 19970101")],-1))]),n("tr",null,[n("td",null,[s[69]||(s[69]=n("code",null,"gender",-1)),s[70]||(s[70]=e()),a(o,{type:"danger",text:"required"})]),s[71]||(s[71]=n("td",null,"string",-1)),s[72]||(s[72]=n("td",null,[e("User's gender "),n("br"),e(" - M : Male "),n("br"),e(" - F : Female "),n("br"),e(" - P : Prefer Not to Say")],-1))]),n("tr",null,[n("td",null,[s[73]||(s[73]=n("code",null,"phone",-1)),s[74]||(s[74]=e()),a(o,{type:"danger",text:"required"})]),s[75]||(s[75]=n("td",null,"string",-1)),s[76]||(s[76]=n("td",null,[e("Phone number in E.164 format "),n("br"),e(" - ex: +14155552671")],-1))]),n("tr",null,[n("td",null,[s[77]||(s[77]=n("code",null,"register_type",-1)),s[78]||(s[78]=e()),a(o,{type:"danger",text:"required"})]),s[79]||(s[79]=n("td",null,"string",-1)),s[80]||(s[80]=n("td",null,[e("Registration type "),n("br"),e(" - E : Email "),n("br"),e(" - S : Social")],-1))]),n("tr",null,[n("td",null,[s[81]||(s[81]=n("code",null,"is_push_agree",-1)),s[82]||(s[82]=e()),a(o,{type:"danger",text:"required"})]),s[83]||(s[83]=n("td",null,"boolean",-1)),s[84]||(s[84]=n("td",null,"Whether the user agrees to receive push notifications",-1))]),n("tr",null,[n("td",null,[s[85]||(s[85]=n("code",null,"is_marketing_agree",-1)),s[86]||(s[86]=e()),a(o,{type:"danger",text:"required"})]),s[87]||(s[87]=n("td",null,"boolean",-1)),s[88]||(s[88]=n("td",null,"Whether the user agrees to receive marketing communications",-1))]),n("tr",null,[n("td",null,[s[89]||(s[89]=n("code",null,"national_code",-1)),s[90]||(s[90]=e()),a(o,{type:"danger",text:"required"})]),s[91]||(s[91]=n("td",null,"string",-1)),s[92]||(s[92]=n("td",null,[e("Country code "),n("a",{href:"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",target:"_blank",rel:"noopener noreferrer"},"ISO 3166-1 alpha-2")],-1))])])]),s[142]||(s[142]=r(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/auth/email/signup</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer valid_token_here</span></span></span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;first_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;last_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;birthdate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;register_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;is_push_agree&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;is_marketing_agree&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;national_code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),a(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:l(({value:t,isActive:i})=>s[94]||(s[94]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:l(({value:t,isActive:i})=>s[95]||(s[95]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:l(({value:t,isActive:i})=>s[96]||(s[96]=[n("p",null,[e("If the signup is successful, it returns an "),n("code",null,"access_token"),e(" and "),n("code",null,"refresh_token"),e(", similar to a login response.")],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"access_token"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"expires_in"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"refresh_token"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"refresh_expires_in"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"token_type"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:l(({value:t,isActive:i})=>s[97]||(s[97]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages based on the HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Email is not valid"),n("td",null,"Invalid email format")]),n("tr",null,[n("td",null,"401"),n("td",null,"Token is invalid"),n("td",null,"Invalid auth token")]),n("tr",null,[n("td",null,"409"),n("td",null,"Same email is already registered"),n("td",null,"Already registered email.")]),n("tr",null,[n("td",null,"500"),n("td",null,"Failed to sign up user"),n("td",null,"Please contact server admin.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Email is not valid"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[143]||(s[143]=n("h3",{id:"password-reset",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#password-reset"},[n("span",null,[n("strong",null,"Password Reset")])])],-1)),s[144]||(s[144]=n("p",null,"This API allows a user to reset their password using their email.",-1)),s[145]||(s[145]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),e(" /api/v1/lux/auth/send-reset-mail ")],-1)),s[146]||(s[146]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[102]||(s[102]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[98]||(s[98]=n("code",null,"email",-1)),s[99]||(s[99]=e()),a(o,{type:"danger",text:"required"})]),s[100]||(s[100]=n("td",null,"string",-1)),s[101]||(s[101]=n("td",null,"Email address",-1))])])]),s[147]||(s[147]=r(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/auth/phone-number-validation</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),a(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:l(({value:t,isActive:i})=>s[103]||(s[103]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:l(({value:t,isActive:i})=>s[104]||(s[104]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:l(({value:t,isActive:i})=>s[105]||(s[105]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"statusCode"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"message"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"User reset password email send successfully"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:l(({value:t,isActive:i})=>s[106]||(s[106]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages based on the HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"User signed up using a social account"),n("td",null,"This email is signed up with social account")]),n("tr",null,[n("td",null,"404"),n("td",null,"User ID not found"),n("td",null,"No account is associated with the provided email")]),n("tr",null,[n("td",null,"500"),n("td",null,"Email send failed"),n("td",null,"Failed to send email")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"User id is not found"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[148]||(s[148]=r('<h3 id="account-recovery-find-account" tabindex="-1"><a class="header-anchor" href="#account-recovery-find-account"><span><strong>Account Recovery (Find Account)</strong></span></a></h3><p>This API allows a user to retrieve their account ID (email) using their registered phone number and a <a href="#verify-sms-verification-code">verification code</a> sent via SMS.</p><div class="api-endpoint"><span class="api-method">POST</span> /api/v1/lux/auth/find-id-by-phone </div><p><strong>Body Parameters</strong></p>',4)),n("table",null,[s[115]||(s[115]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[107]||(s[107]=n("code",null,"phone",-1)),s[108]||(s[108]=e()),a(o,{type:"danger",text:"required"})]),s[109]||(s[109]=n("td",null,"string",-1)),s[110]||(s[110]=n("td",null,[e("Phone number in E.164 format "),n("br"),e(" - ex: +14155552671")],-1))]),n("tr",null,[n("td",null,[s[111]||(s[111]=n("code",null,"validnum",-1)),s[112]||(s[112]=e()),a(o,{type:"danger",text:"required"})]),s[113]||(s[113]=n("td",null,"string",-1)),s[114]||(s[114]=n("td",null,"6-digit verification code received via SMS",-1))])])]),s[149]||(s[149]=r(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/auth/phone-number-validation</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;validnum&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),a(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:l(({value:t,isActive:i})=>s[116]||(s[116]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:l(({value:t,isActive:i})=>s[117]||(s[117]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:l(({value:t,isActive:i})=>s[118]||(s[118]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"email"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"your@email.com"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"provider"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"naver"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:l(({value:t,isActive:i})=>s[119]||(s[119]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages based on the HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Validation code is expired"),n("td",null,"The provided code is expired")]),n("tr",null,[n("td",null,"400"),n("td",null,"Validation code is invalid"),n("td",null,"The provided code is invalid")]),n("tr",null,[n("td",null,"403"),n("td",null,"User previously deleted"),n("td",null,"Account has been deleted.")]),n("tr",null,[n("td",null,"404"),n("td",null,"User id is not found"),n("td",null,"Can not find related account info")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Validation code is expired"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[150]||(s[150]=r(`<h2 id="common-error-handling" tabindex="-1"><a class="header-anchor" href="#common-error-handling"><span><strong>Common Error Handling</strong></span></a></h2><p>These are error codes that are commonly returned by all endpoints.</p><p><strong>Error Response Example</strong></p><ul><li><code>401 Unauthorized</code>: The token is invalid.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Could not validate credentials&quot;</span> <span class="token comment">// The token is invalid</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>401 Unauthorized</code>: The token has expired.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Token is expired&quot;</span> <span class="token comment">// The token has expired.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>404 Not Found</code>: The resource cannot be found. Please check the URI again.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Resource not found&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>500 Internal Server Error</code>: This is a server error.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Internal server error. Please try again later.&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,4))])}const h=d(v,[["render",g]]),y=JSON.parse('{"path":"/en/api-guide/lux/auth.html","title":"Authentication","lang":"en-US","frontmatter":{},"git":{"updatedTime":1747723115000,"contributors":[{"name":"Jeongtae Kim","username":"","email":"jeongtae.kim@nueyne.com","commits":2}],"changelog":[{"hash":"b67603bbd31d6f2319d285206b18950ad3f5c938","time":1747723115000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ Fixed the documentation for the Lux API"},{"hash":"49de54d6e40a63718ffb28243df28c59e7f7f913","time":1747722927000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ feat: add auth API documentation for Lux enlgish version"}]},"filePathRelative":"en/api-guide/lux/auth.md"}');export{h as comp,y as data};
