import{_ as d,c as g,a as p,b as n,e as t,d as l,w as e,r as u,o as m}from"./app-BlYON7qD.js";const k={};function b(v,s){const a=u("Badge"),o=u("Tabs");return m(),g("div",null,[s[121]||(s[121]=p(`<h1 id="인증" tabindex="-1"><a class="header-anchor" href="#인증"><span><strong>인증</strong></span></a></h1><p>해당 페이지는 Elexir Legacy 프로젝트의 인증과 관련된 API를 설명해놓은 페이지입니다.</p><h2 id="소개" tabindex="-1"><a class="header-anchor" href="#소개"><span><strong>소개</strong></span></a></h2><p>Elexir Legacy 인증 API는 회원가입, 로그인과 같은 인증 관련 작업을 수행하는 기능입니다.</p><p>API 흐름에 대한 시각적인 흐름도가 필요하다면 <a href="https://www.figma.com/board/4ku2F0sWUBycYZAP5Zo1gZ/Elexir-Legacy-API-Flow?node-id=0-1&amp;p=f&amp;t=2SiQxHwy08Cs6NfT-0" target="_blank" rel="noopener noreferrer">Figma API Flow</a> 페이지를 참고해주세요.</p><h2 id="인증-1" tabindex="-1"><a class="header-anchor" href="#인증-1"><span><strong>인증</strong></span></a></h2><p>일부 인증 API는 인증 토큰을 필요로 합니다. 인증을 하기위해서 <code>Authorization</code> header 에 인증 토큰을 넣어서 API를 호출해주세요.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">Authorization: Bearer your_token_here</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>your_token_here</code> 에 인증 과정에서 획득한 access_token으로 대체해주세요.</p><h2 id="엔드포인트" tabindex="-1"><a class="header-anchor" href="#엔드포인트"><span><strong>엔드포인트</strong></span></a></h2><h3 id="로그인" tabindex="-1"><a class="header-anchor" href="#로그인"><span><strong>로그인</strong></span></a></h3><p>해당 이메일과 비밀번호로 로그인하는 API입니다.</p><div class="api-endpoint"><span class="api-method">POST</span> /api/v1/legacy/auth/signin </div><p><strong>Body Parameters</strong></p>`,14)),n("table",null,[s[8]||(s[8]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[0]||(s[0]=n("code",null,"username",-1)),s[1]||(s[1]=l()),t(a,{type:"danger",text:"required"})]),s[2]||(s[2]=n("td",null,"string",-1)),s[3]||(s[3]=n("td",null,"이메일 값",-1))]),n("tr",null,[n("td",null,[s[4]||(s[4]=n("code",null,"password",-1)),s[5]||(s[5]=l()),t(a,{type:"danger",text:"required"})]),s[6]||(s[6]=n("td",null,"string",-1)),s[7]||(s[7]=n("td",null,"비밀번호 값",-1))])])]),s[122]||(s[122]=p(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/legacy/auth/signin</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span></span>
<span class="line">{</span>
<span class="line">  &quot;username &quot;: &quot;string&quot;,</span>
<span class="line">  &quot;password &quot;: &quot;string&quot;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),t(o,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:e(({value:r,isActive:i})=>s[9]||(s[9]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:e(({value:r,isActive:i})=>s[10]||(s[10]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:e(({value:r,isActive:i})=>s[11]||(s[11]=[n("p",null,[l("로그인이 성공하면 사용자에게 "),n("code",null,"access_token"),l("과 "),n("code",null,"refresh_token"),l("을 발급합니다. API 호출시에는 "),n("code",null,"access_token"),l("을 사용하세요. "),n("code",null,"refresh_token"),l("은 "),n("code",null,"access_token"),l(" 만료시 재발급할때 사용하세요.")],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"access_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"refresh_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"refresh_expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"token_type"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:r,isActive:i})=>s[12]||(s[12]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Incorrect email or password"),n("td",null,"이메일 또는 비밀번호가 잘못됬습니다.")]),n("tr",null,[n("td",null,"403"),n("td",null,"Email is not verified"),n("td",null,"이메일 인증이 완료되지 않았습니다.")]),n("tr",null,[n("td",null,"410"),n("td",null,"User is deleted"),n("td",null,"회원탈퇴한 계정입니다.")]),n("tr",null,[n("td",null,"423"),n("td",null,"User is blocked"),n("td",null,"차단된 계정입니다.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Password is invalid"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[123]||(s[123]=n("h3",{id:"이메일-회원가입",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#이메일-회원가입"},[n("span",null,[n("strong",null,"이메일 회원가입")])])],-1)),s[124]||(s[124]=n("p",null,"입력받은 정보를 통해 회원가입을 완료하는 API입니다.",-1)),s[125]||(s[125]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/legacy/auth/signup ")],-1)),s[126]||(s[126]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[77]||(s[77]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[13]||(s[13]=n("code",null,"email",-1)),s[14]||(s[14]=l()),t(a,{type:"danger",text:"required"})]),s[15]||(s[15]=n("td",null,"string",-1)),s[16]||(s[16]=n("td",null,"이메일 값입니다.",-1))]),n("tr",null,[n("td",null,[s[17]||(s[17]=n("code",null,"password",-1)),s[18]||(s[18]=l()),t(a,{type:"danger",text:"required"})]),s[19]||(s[19]=n("td",null,"string",-1)),s[20]||(s[20]=n("td",null,"비밀번호 입니다.",-1))]),n("tr",null,[n("td",null,[s[21]||(s[21]=n("code",null,"phone",-1)),s[22]||(s[22]=l()),t(a,{type:"danger",text:"required"})]),s[23]||(s[23]=n("td",null,"string",-1)),s[24]||(s[24]=n("td",null,[l("전화번호 값입니다. 서버에서 국제전화번호형식으로 저장합니다. "),n("br"),l(" - ex: 01012345678 or 010-1234-5678")],-1))]),n("tr",null,[n("td",null,[s[25]||(s[25]=n("code",null,"username",-1)),s[26]||(s[26]=l()),t(a,{type:"danger",text:"required"})]),s[27]||(s[27]=n("td",null,"string",-1)),s[28]||(s[28]=n("td",null,"회원가입할 유저의 이름입니다.",-1))]),n("tr",null,[n("td",null,[s[29]||(s[29]=n("code",null,"relation",-1)),s[30]||(s[30]=l()),t(a,{type:"danger",text:"required"})]),s[31]||(s[31]=n("td",null,"string",-1)),s[32]||(s[32]=n("td",null,[l("디바이스를 본인이 사용하지 않을 경우 사용자와의 관계를 입력합니다. "),n("br"),l(" - 부모 "),n("br"),l(" - 자녀")],-1))]),n("tr",null,[n("td",null,[s[33]||(s[33]=n("code",null,"gender",-1)),s[34]||(s[34]=l()),t(a,{type:"danger",text:"required"})]),s[35]||(s[35]=n("td",null,"string",-1)),s[36]||(s[36]=n("td",null,[l("회원가입할 유저의 성별입니다 "),n("br"),l(" - M : 남성 "),n("br"),l(" - F : 여성")],-1))]),n("tr",null,[n("td",null,[s[37]||(s[37]=n("code",null,"birthdate",-1)),s[38]||(s[38]=l()),t(a,{type:"danger",text:"required"})]),s[39]||(s[39]=n("td",null,"string",-1)),s[40]||(s[40]=n("td",null,[l("회원가입할 유저의 생년월일입니다(yyyy-mm-dd). "),n("br"),l(" - 예시 : 1997-01-01")],-1))]),n("tr",null,[n("td",null,[s[41]||(s[41]=n("code",null,"gender_real",-1)),s[42]||(s[42]=l()),t(a,{type:"danger",text:"required"})]),s[43]||(s[43]=n("td",null,"string",-1)),s[44]||(s[44]=n("td",null,[l("디바이스를 본인이 사용하지 않을 경우 사용자의 성별입니다. 만약 본인이 사용한다면 gender값을 그대로 보내주세요. "),n("br"),l(" - M : 남성 "),n("br"),l(" - F : 여성")],-1))]),n("tr",null,[n("td",null,[s[45]||(s[45]=n("code",null,"birthdate_real",-1)),s[46]||(s[46]=l()),t(a,{type:"danger",text:"required"})]),s[47]||(s[47]=n("td",null,"string",-1)),s[48]||(s[48]=n("td",null,[l("디바이스를 본인이 사용하지 않을 경우 사용자의 생년월일입니다(yyyy-mm-dd). 만약 본인이 사용한다면 birthdate값을 그대로 보내주세요. "),n("br"),l(" - 예시 : 1997-01-01")],-1))]),n("tr",null,[n("td",null,[s[49]||(s[49]=n("code",null,"social_google_id",-1)),s[50]||(s[50]=l()),t(a,{type:"info",text:"optional"})]),s[51]||(s[51]=n("td",null,"string",-1)),s[52]||(s[52]=n("td",null,"구글 소셜 계정의 고유 sub 값",-1))]),n("tr",null,[n("td",null,[s[53]||(s[53]=n("code",null,"social_kakao_id",-1)),s[54]||(s[54]=l()),t(a,{type:"info",text:"optional"})]),s[55]||(s[55]=n("td",null,"string",-1)),s[56]||(s[56]=n("td",null,"카카오 소셜 계정의 고유 sub 값",-1))]),n("tr",null,[n("td",null,[s[57]||(s[57]=n("code",null,"social_naver_id",-1)),s[58]||(s[58]=l()),t(a,{type:"info",text:"optional"})]),s[59]||(s[59]=n("td",null,"string",-1)),s[60]||(s[60]=n("td",null,"네이버 소셜 계정의 고유 sub 값",-1))]),n("tr",null,[n("td",null,[s[61]||(s[61]=n("code",null,"social_apple_id",-1)),s[62]||(s[62]=l()),t(a,{type:"info",text:"optional"})]),s[63]||(s[63]=n("td",null,"string",-1)),s[64]||(s[64]=n("td",null,"apple 소셜 계정의 고유 sub 값",-1))]),n("tr",null,[n("td",null,[s[65]||(s[65]=n("code",null,"is_marketing_agree",-1)),s[66]||(s[66]=l()),t(a,{type:"danger",text:"required"})]),s[67]||(s[67]=n("td",null,"boolean",-1)),s[68]||(s[68]=n("td",null,"마케팅 수신 동의 여부입니다.",-1))]),n("tr",null,[n("td",null,[s[69]||(s[69]=n("code",null,"is_push_agree",-1)),s[70]||(s[70]=l()),t(a,{type:"danger",text:"required"})]),s[71]||(s[71]=n("td",null,"boolean",-1)),s[72]||(s[72]=n("td",null,"푸시 알림 동의 여부입니다.",-1))]),n("tr",null,[n("td",null,[s[73]||(s[73]=n("code",null,"country",-1)),s[74]||(s[74]=l()),t(a,{type:"danger",text:"required"})]),s[75]||(s[75]=n("td",null,"string",-1)),s[76]||(s[76]=n("td",null,"회원가입할 유저의 국가입니다. ISO 3166-1 alpha-2 형식을 따릅니다.",-1))])])]),s[127]||(s[127]=p(`<div class="hint-container tip"><p class="hint-container-title">country 값 설명</p><p><code>country</code>는 ISO 3166-1 alpha-2 형식을 따릅니다. <code>KR (South Korea)</code> 또는 <code>KR</code> 같은 형식으로 보내주세요.</p><p>해당 국가 코드에 따라 사용자의 전화번호를 국제 표준으로 파싱해서 저장합니다.</p><table><thead><tr><th>국가코드</th><th>파싱된 번호</th></tr></thead><tbody><tr><td>KR (South Korea)</td><td>+821012345678</td></tr><tr><td>US (United States)</td><td>+14053007661</td></tr><tr><td>TW (Taiwan)</td><td>+886912341234</td></tr></tbody></table><p>등등</p></div><p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST   /api/v1/legacy/auth/signup</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;jeongtae.kim@nueyne.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1234&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;01012345858&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// DB에는 +821012345678 로 치환되어 저장</span></span>
<span class="line">    <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tester1234&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;S&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token string">&quot;M&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;gender_real&quot;</span><span class="token operator">:</span> <span class="token string">&quot;M&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;birthdate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1990-01-01&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;birthdate_real&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1990-01-01&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;is_marketing_agree&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;is_push_agree&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;country&quot;</span><span class="token operator">:</span> <span class="token string">&quot;KR (South Korea)&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,4)),t(o,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:e(({value:r,isActive:i})=>s[78]||(s[78]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:e(({value:r,isActive:i})=>s[79]||(s[79]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:e(({value:r,isActive:i})=>s[80]||(s[80]=[n("p",null,"회원가입이 성공하면 statuscode 201과 message를 리턴합니다. 사용자가 회원가입때 사용한 이메일로 인증메일을 전송합니다.",-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"statusCode"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"201"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"message"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"User created successfully"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:r,isActive:i})=>s[81]||(s[81]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Email is not valid"),n("td",null,"유효하지 않은 이메일 형식입니다.")]),n("tr",null,[n("td",null,"400"),n("td",null,"Invalid or unsupported country code"),n("td",null,"유효하지 않은 국가코드 형식입니다.")]),n("tr",null,[n("td",null,"400"),n("td",null,"Invalid phone number format for country"),n("td",null,"해당 국가의 전화번호 형식이 아닙니다.")]),n("tr",null,[n("td",null,"400"),n("td",null,"Could not parse phone number"),n("td",null,"유효하지 않은 전화번호 형식입니다.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Same email is already registered"),n("td",null,"이미 회원가입한 이메일입니다.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Same phone number is already registered"),n("td",null,"이미 회원가입한 전화번호입니다.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Email send failed"),n("td",null,"인증 이메일 발송 실패.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Same email is already registered"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[128]||(s[128]=n("h3",{id:"아이디-찾기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#아이디-찾기"},[n("span",null,[n("strong",null,"아이디 찾기")])])],-1)),s[129]||(s[129]=n("p",null,"유저가 가입했던 정보를 가지고 아이디를 찾는 API입니다.",-1)),s[130]||(s[130]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/legacy/auth/find-id ")],-1)),s[131]||(s[131]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[98]||(s[98]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[82]||(s[82]=n("code",null,"birthdate",-1)),s[83]||(s[83]=l()),t(a,{type:"danger",text:"required"})]),s[84]||(s[84]=n("td",null,"string",-1)),s[85]||(s[85]=n("td",null,"생년월일 값입니다 (yyyy-mm-dd)",-1))]),n("tr",null,[n("td",null,[s[86]||(s[86]=n("code",null,"country",-1)),s[87]||(s[87]=l()),t(a,{type:"danger",text:"required"})]),s[88]||(s[88]=n("td",null,"string",-1)),s[89]||(s[89]=n("td",null,"유저의 국가입니다. ISO 3166-1 alpha-2 형식을 따릅니다.",-1))]),n("tr",null,[n("td",null,[s[90]||(s[90]=n("code",null,"phone",-1)),s[91]||(s[91]=l()),t(a,{type:"danger",text:"required"})]),s[92]||(s[92]=n("td",null,"string",-1)),s[93]||(s[93]=n("td",null,"전화번호 값입니다 (xxxxxxxxxxx)",-1))]),n("tr",null,[n("td",null,[s[94]||(s[94]=n("code",null,"gender",-1)),s[95]||(s[95]=l()),t(a,{type:"danger",text:"required"})]),s[96]||(s[96]=n("td",null,"string",-1)),s[97]||(s[97]=n("td",null,[l("성별 "),n("br"),l(" - M : 남성 "),n("br"),l(" - F : 여성")],-1))])])]),s[132]||(s[132]=p(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/legacy/auth/find-id</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;birthdate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2000-01-01&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;country&quot;</span><span class="token operator">:</span> <span class="token string">&quot;KR (South Korea)&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;01012345678&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token string">&quot;M&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),t(o,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:e(({value:r,isActive:i})=>s[99]||(s[99]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:e(({value:r,isActive:i})=>s[100]||(s[100]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:e(({value:r,isActive:i})=>s[101]||(s[101]=[n("p",null,"사용자 이메일 값을 반환합니다.",-1),n("div",{class:"language-string line-numbers-mode","data-highlighter":"prismjs","data-ext":"string"},[n("pre",null,[n("code",{class:"language-string"},[n("span",{class:"line"},'"elexir_legacy@test.com"'),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab1:e(({value:r,isActive:i})=>s[102]||(s[102]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Invalid or unsupported country code"),n("td",null,"유효하지 않은 국가코드 형식입니다.")]),n("tr",null,[n("td",null,"400"),n("td",null,"Invalid phone number format for country"),n("td",null,"해당 국가의 전화번호 형식이 아닙니다.")]),n("tr",null,[n("td",null,"400"),n("td",null,"Could not parse phone number"),n("td",null,"유효하지 않은 전화번호 형식입니다.")]),n("tr",null,[n("td",null,"404"),n("td",null,"User id not found"),n("td",null,"해당 유저를 찾을 수 없습니다.")]),n("tr",null,[n("td",null,"410"),n("td",null,"User is deleted"),n("td",null,"회원탈퇴한 계정입니다.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"User id not found"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[133]||(s[133]=n("h3",{id:"비밀번호-초기화",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#비밀번호-초기화"},[n("span",null,[n("strong",null,"비밀번호 초기화")])])],-1)),s[134]||(s[134]=n("p",null,"해당 이메일과 비밀번호로 로그인하는 API입니다.",-1)),s[135]||(s[135]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/legacy/auth/send-reset-mail ")],-1)),s[136]||(s[136]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[107]||(s[107]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[103]||(s[103]=n("code",null,"email",-1)),s[104]||(s[104]=l()),t(a,{type:"danger",text:"required"})]),s[105]||(s[105]=n("td",null,"string",-1)),s[106]||(s[106]=n("td",null,"이메일 값",-1))])])]),s[137]||(s[137]=p(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/legacy/auth/send-reset-mail</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),t(o,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:e(({value:r,isActive:i})=>s[108]||(s[108]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:e(({value:r,isActive:i})=>s[109]||(s[109]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:e(({value:r,isActive:i})=>s[110]||(s[110]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"statusCode"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"message"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"User reset password email send successfully"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:r,isActive:i})=>s[111]||(s[111]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"404"),n("td",null,"User ID not found"),n("td",null,"해당 유저를 찾을 수 없습니다.")]),n("tr",null,[n("td",null,"500"),n("td",null,"Email send failed"),n("td",null,"이메일 발송 실패.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Email send failed"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[138]||(s[138]=n("h3",{id:"토큰-재발급",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#토큰-재발급"},[n("span",null,[n("strong",null,"토큰 재발급")])])],-1)),s[139]||(s[139]=n("p",null,"refresh_token을 이용해 token을 재발급 받는 API입니다. refresh_token의 유저 정보가 일치하지만 DB에 저장된 refresh_token과 일치하지 않을 경우 중복 로그인으로 판단하여 DB의 refresh_token을 삭제합니다. 프론트단에서는 401 Refresh token is not valid 오류에서 로그아웃으로 분기해야 합니다.",-1)),s[140]||(s[140]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/legacy/auth/refresh-token ")],-1)),s[141]||(s[141]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[116]||(s[116]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[112]||(s[112]=n("code",null,"refresh_token",-1)),s[113]||(s[113]=l()),t(a,{type:"danger",text:"required"})]),s[114]||(s[114]=n("td",null,"string",-1)),s[115]||(s[115]=n("td",null,"기존 Refresh Token",-1))])])]),s[142]||(s[142]=p(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/legacy/auth/refresh-token</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),t(o,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:e(({value:r,isActive:i})=>s[117]||(s[117]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:e(({value:r,isActive:i})=>s[118]||(s[118]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:e(({value:r,isActive:i})=>s[119]||(s[119]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"access_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"access_token"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"900"),n("span",{class:"token punctuation"},","),l(),n("span",{class:"token comment"},"// 15 분 ")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"refresh_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"new_refresh_token"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"refresh_expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"1209600"),n("span",{class:"token punctuation"},","),l("  "),n("span",{class:"token comment"},"// 2 주")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"uuid"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"token_type"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"bearer"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:r,isActive:i})=>s[120]||(s[120]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Token is expired"),n("td",null,"refresh_token이 만료됨, 로그아웃시켜야함.")]),n("tr",null,[n("td",null,"401"),n("td",null,"Could not validate credentials"),n("td",null,"잘못된 refresh_token, 로그아웃시켜야함.")]),n("tr",null,[n("td",null,"401"),n("td",null,"Refresh token is not valid"),n("td",null,"중복 로그인으로 판단, 로그아웃시켜야함.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Refresh token is not valid"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1})])}const y=d(k,[["render",b]]),q=JSON.parse('{"path":"/api-guide/elexir-legacy/auth.html","title":"인증","lang":"ko-KR","frontmatter":{},"git":{"updatedTime":1745389493000,"contributors":[{"name":"Jeongtae Kim","username":"","email":"jeongtae.kim@nueyne.com","commits":5}],"changelog":[{"hash":"6357bd52e2f04a7810ab8ad799cd6fdb412954d9","time":1745389493000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ Elexir legacy country code update"},{"hash":"6ab5c3469a2122566c9ebb2e314f18e0b43900d1","time":1745306289000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"🚑️ 일렉시아 1.0 오류 코드 수정 및 회원가입 API 파라미터 수정"},{"hash":"323c34ab5db65db4ee49be0e03d490161c26c80c","time":1744787651000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"오타 수정"},{"hash":"0836c6cf2630822ec765ea2d7afd268ffa7aff22","time":1744678113000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ Added elexir legacy device, auth, user api page"},{"hash":"89c5c558cbd5ba2001bdd244cbf70e085c810185","time":1744005724000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ 일렉시아 1.0 API 추가"}]},"filePathRelative":"api-guide/elexir-legacy/auth.md"}');export{y as comp,q as data};
