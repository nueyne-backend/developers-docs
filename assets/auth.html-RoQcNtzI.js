import{_ as d,c as m,a as o,b as n,e as a,d as l,w as t,r as u,o as g}from"./app-BlYON7qD.js";const k={};function v(c,s){const e=u("Badge"),r=u("Tabs");return g(),m("div",null,[s[196]||(s[196]=o(`<h1 id="인증" tabindex="-1"><a class="header-anchor" href="#인증"><span><strong>인증</strong></span></a></h1><p>해당 페이지는 Withnox &amp; Addnox 프로젝트의 인증과 관련된 API를 설명해놓은 페이지입니다.</p><h2 id="소개" tabindex="-1"><a class="header-anchor" href="#소개"><span><strong>소개</strong></span></a></h2><p>Withnox &amp; Addnox 인증 API는 회원가입, 소셜 회원가입, 로그인, SMS 번호 인증과 같은 인증 관련 작업을 수행하는 기능입니다.</p><p>API 흐름에 대한 시각적인 흐름도가 필요하다면 <a href="https://www.figma.com/board/PhHUx8wj4FGvTMPBxTnzVc/ADDNOX-API-Flow?node-id=0-1&amp;node-type=canvas&amp;t=HyUVwsn2ws5yzZVZ-0" target="_blank" rel="noopener noreferrer">Figma API Flow</a> 페이지를 참고해주세요.</p><h2 id="인증-1" tabindex="-1"><a class="header-anchor" href="#인증-1"><span><strong>인증</strong></span></a></h2><p>일부 인증 API는 인증 토큰을 필요로 합니다. 인증을 하기위해서 <code>Authorization</code> header 에 인증 토큰을 넣어서 API를 호출해주세요.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">Authorization: Bearer your_token_here</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>your_token_here</code> 에 인증 과정에서 획득한 access_token으로 대체해주세요.</p><h2 id="엔드포인트" tabindex="-1"><a class="header-anchor" href="#엔드포인트"><span><strong>엔드포인트</strong></span></a></h2><h3 id="로그인" tabindex="-1"><a class="header-anchor" href="#로그인"><span><strong>로그인</strong></span></a></h3><p>해당 이메일과 비밀번호로 로그인하는 API입니다.</p><div class="api-endpoint"><span class="api-method">POST</span> /api/v1/addnox/auth/email/signin </div><p><strong>Body Parameters</strong></p>`,14)),n("table",null,[s[8]||(s[8]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[0]||(s[0]=n("code",null,"username",-1)),s[1]||(s[1]=l()),a(e,{type:"danger",text:"required"})]),s[2]||(s[2]=n("td",null,"string",-1)),s[3]||(s[3]=n("td",null,"이메일 값",-1))]),n("tr",null,[n("td",null,[s[4]||(s[4]=n("code",null,"password",-1)),s[5]||(s[5]=l()),a(e,{type:"danger",text:"required"})]),s[6]||(s[6]=n("td",null,"string",-1)),s[7]||(s[7]=n("td",null,"비밀번호 값",-1))])])]),s[197]||(s[197]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/addnox/auth/email/signin</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span></span>
<span class="line">{</span>
<span class="line">  &quot;username &quot;: &quot;string&quot;,</span>
<span class="line">  &quot;password &quot;: &quot;string&quot;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),a(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:t(({value:i,isActive:p})=>s[9]||(s[9]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:t(({value:i,isActive:p})=>s[10]||(s[10]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:t(({value:i,isActive:p})=>s[11]||(s[11]=[n("p",null,[l("로그인이 성공하면 사용자에게 "),n("code",null,"access_token"),l("과 "),n("code",null,"refresh_token"),l("을 발급합니다. API 호출시에는 "),n("code",null,"access_token"),l("을 사용하세요. "),n("code",null,"refresh_token"),l("은 "),n("code",null,"access_token"),l(" 만료시 재발급할때 사용하세요.")],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"access_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"refresh_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"refresh_expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"token_type"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:p})=>s[12]||(s[12]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Password is invalid"),n("td",null,"잘못된 비밀번호입니다.")]),n("tr",null,[n("td",null,"401"),n("td",null,"Sign-up not completed"),n("td",null,"회원가입이 완료되지 않았습니다.")]),n("tr",null,[n("td",null,"403"),n("td",null,"SMS verification required"),n("td",null,"SMS 인증이 완료되지 않았습니다.")]),n("tr",null,[n("td",null,"404"),n("td",null,"User not found"),n("td",null,"해당 유저를 찾을 수 없습니다.")]),n("tr",null,[n("td",null,"410"),n("td",null,"User is Deleted"),n("td",null,"회원탈퇴한 계정입니다.")]),n("tr",null,[n("td",null,"423"),n("td",null,"Access denied. Account blocked"),n("td",null,"차단된 계정입니다.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Password is invalid"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[198]||(s[198]=n("h3",{id:"토큰-재발급",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#토큰-재발급"},[n("span",null,[n("strong",null,"토큰 재발급")])])],-1)),s[199]||(s[199]=n("p",null,"refresh_token을 이용해 token을 재발급 받는 API입니다. refresh_token의 유저 정보가 일치하지만 DB에 저장된 refresh_token과 일치하지 않을 경우 중복 로그인으로 판단하여 DB의 refresh_token을 삭제합니다. 프론트단에서는 401 Refresh token is not valid 오류에서 로그아웃으로 분기해야 합니다.",-1)),s[200]||(s[200]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/addnox/auth/refresh-token ")],-1)),s[201]||(s[201]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[17]||(s[17]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[13]||(s[13]=n("code",null,"refresh_token",-1)),s[14]||(s[14]=l()),a(e,{type:"danger",text:"required"})]),s[15]||(s[15]=n("td",null,"string",-1)),s[16]||(s[16]=n("td",null,"기존 Refresh Token",-1))])])]),s[202]||(s[202]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/addnox/auth/refresh-token</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),a(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:t(({value:i,isActive:p})=>s[18]||(s[18]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:t(({value:i,isActive:p})=>s[19]||(s[19]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:t(({value:i,isActive:p})=>s[20]||(s[20]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"access_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"access_token"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"900"),n("span",{class:"token punctuation"},","),l(),n("span",{class:"token comment"},"// 15 분 ")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"refresh_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"new_refresh_token"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"refresh_expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"1209600"),n("span",{class:"token punctuation"},","),l("  "),n("span",{class:"token comment"},"// 2 주")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"uuid"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"token_type"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"bearer"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:p})=>s[21]||(s[21]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Token is expired"),n("td",null,"refresh_token이 만료됨, 로그아웃시켜야함.")]),n("tr",null,[n("td",null,"401"),n("td",null,"Could not validate credentials"),n("td",null,"잘못된 refresh_token, 로그아웃시켜야함.")]),n("tr",null,[n("td",null,"401"),n("td",null,"Refresh token is not valid"),n("td",null,"중복 로그인으로 판단, 로그아웃시켜야함.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Refresh token is not valid"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[203]||(s[203]=n("h3",{id:"sms-인증-메세지-전송",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sms-인증-메세지-전송"},[n("span",null,[n("strong",null,"SMS 인증 메세지 전송")])])],-1)),s[204]||(s[204]=n("p",null,"해당 전화번호로 인증 문자를 발송하는 API입니다. 회원가입 뿐만 아니라 잃어버린 계정을 찾는데도 사용됩니다.",-1)),s[205]||(s[205]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/addnox/auth/send-sms-auth ")],-1)),s[206]||(s[206]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[26]||(s[26]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[22]||(s[22]=n("code",null,"phone",-1)),s[23]||(s[23]=l()),a(e,{type:"danger",text:"required"})]),s[24]||(s[24]=n("td",null,"string",-1)),s[25]||(s[25]=n("td",null,[l("전화번호 값이 E.164 format 이어야 합니다. "),n("br"),l(" - ex: +1012345678")],-1))])])]),s[207]||(s[207]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/addnox/auth/send-sms-auth</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;+1012345678&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),a(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:t(({value:i,isActive:p})=>s[27]||(s[27]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:t(({value:i,isActive:p})=>s[28]||(s[28]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:t(({value:i,isActive:p})=>s[29]||(s[29]=[n("p",null,"문자 발송이 성공하면 true가 반환됩니다.",-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[l("  "),n("span",{class:"token boolean"},"true")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:p})=>s[30]||(s[30]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Phone number is invalid"),n("td",null,"잘못된 전화번호 형식입니다.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Phone number is already registered"),n("td",null,"이미 회원가입이 완료된 계정의 전화번호입니다.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Failed to send SMS"),n("td",null,"Twillo 서비스를 통한 문자 전송 실패.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Phone number is invalid"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[208]||(s[208]=n("h3",{id:"sms-인증-번호-검증",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sms-인증-번호-검증"},[n("span",null,[n("strong",null,"SMS 인증 번호 검증")])])],-1)),s[209]||(s[209]=n("p",null,"SMS 인증 메세지로 전송된 6자리 번호를 검증하는 API 입니다.",-1)),s[210]||(s[210]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/addnox/auth/phone-number-validation ")],-1)),s[211]||(s[211]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[39]||(s[39]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[31]||(s[31]=n("code",null,"phone",-1)),s[32]||(s[32]=l()),a(e,{type:"danger",text:"required"})]),s[33]||(s[33]=n("td",null,"string",-1)),s[34]||(s[34]=n("td",null,[l("전화번호 값이 E.164 format 이어야 합니다. "),n("br"),l(" - ex: +1012345678")],-1))]),n("tr",null,[n("td",null,[s[35]||(s[35]=n("code",null,"validnum",-1)),s[36]||(s[36]=l()),a(e,{type:"danger",text:"required"})]),s[37]||(s[37]=n("td",null,"string",-1)),s[38]||(s[38]=n("td",null,"SMS 인증 메세지로 전송된 6자리 번호입니다.",-1))])])]),s[212]||(s[212]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/addnox/auth/phone-number-validation</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;+1012345678&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;validnum&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123456&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),a(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:t(({value:i,isActive:p})=>s[40]||(s[40]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:t(({value:i,isActive:p})=>s[41]||(s[41]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:t(({value:i,isActive:p})=>s[42]||(s[42]=[n("p",null,"SMS 인증 번호 검증이 성공하면 valid_token 을 return 해줍니다. signup API 호출시 해당 토큰을 Authorization Header에 담아서 보내주세요.",-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"valid_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:p})=>s[43]||(s[43]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Validation code is expired"),n("td",null,"인증번호가 만료되었습니다.")]),n("tr",null,[n("td",null,"400"),n("td",null,"Validation code is invalid"),n("td",null,"잘못된 인증번호입니다.")]),n("tr",null,[n("td",null,"403"),n("td",null,"User previously deleted"),n("td",null,"이미 탈퇴 처리된 사용자입니다.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Phone number is already registered"),n("td",null,"이미 회원가입한 번호입니다.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Validation code is expired"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[213]||(s[213]=n("h3",{id:"이메일-회원가입",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#이메일-회원가입"},[n("span",null,[n("strong",null,"이메일 회원가입")])])],-1)),s[214]||(s[214]=n("p",null,[l("입력받은 정보를 통해 회원가입을 완료하는 API입니다. SMS 인증 검증을 통해 받은 "),n("code",null,"valid_token"),l("을 확인해주세요.")],-1)),s[215]||(s[215]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/addnox/auth/email/signup ")],-1)),s[216]||(s[216]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[s[48]||(s[48]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[44]||(s[44]=n("code",null,"Authorization",-1)),s[45]||(s[45]=l()),a(e,{type:"danger",text:"required"})]),s[46]||(s[46]=n("td",null,"Bearer",-1)),s[47]||(s[47]=n("td",null,"valid_token",-1))])])]),s[217]||(s[217]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[93]||(s[93]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[49]||(s[49]=n("code",null,"email",-1)),s[50]||(s[50]=l()),a(e,{type:"danger",text:"required"})]),s[51]||(s[51]=n("td",null,"string",-1)),s[52]||(s[52]=n("td",null,"이메일 값입니다.",-1))]),n("tr",null,[n("td",null,[s[53]||(s[53]=n("code",null,"password",-1)),s[54]||(s[54]=l()),a(e,{type:"danger",text:"required"})]),s[55]||(s[55]=n("td",null,"string",-1)),s[56]||(s[56]=n("td",null,"비밀번호 입니다.",-1))]),n("tr",null,[n("td",null,[s[57]||(s[57]=n("code",null,"first_name",-1)),s[58]||(s[58]=l()),a(e,{type:"danger",text:"required"})]),s[59]||(s[59]=n("td",null,"string",-1)),s[60]||(s[60]=n("td",null,"회원가입할 유저의 이름입니다.",-1))]),n("tr",null,[n("td",null,[s[61]||(s[61]=n("code",null,"last_name",-1)),s[62]||(s[62]=l()),a(e,{type:"danger",text:"required"})]),s[63]||(s[63]=n("td",null,"string",-1)),s[64]||(s[64]=n("td",null,"회원가입할 유저의 성입니다.",-1))]),n("tr",null,[n("td",null,[s[65]||(s[65]=n("code",null,"birthdate",-1)),s[66]||(s[66]=l()),a(e,{type:"danger",text:"required"})]),s[67]||(s[67]=n("td",null,"string",-1)),s[68]||(s[68]=n("td",null,[l("회원가입할 유저의 생년월일입니다(yyyymmdd). "),n("br"),l(" - 예시 : 19970101")],-1))]),n("tr",null,[n("td",null,[s[69]||(s[69]=n("code",null,"gender",-1)),s[70]||(s[70]=l()),a(e,{type:"danger",text:"required"})]),s[71]||(s[71]=n("td",null,"string",-1)),s[72]||(s[72]=n("td",null,[l("회원가입할 유저의 성별입니다 "),n("br"),l(" - M : 남성 "),n("br"),l(" - F : 여성 "),n("br"),l(" - N : 논바이너리 "),n("br"),l(" - P : 알려주고 싶지 않음")],-1))]),n("tr",null,[n("td",null,[s[73]||(s[73]=n("code",null,"phone",-1)),s[74]||(s[74]=l()),a(e,{type:"danger",text:"required"})]),s[75]||(s[75]=n("td",null,"string",-1)),s[76]||(s[76]=n("td",null,[l("전화번호 값이 E.164 format 이어야 합니다. "),n("br"),l(" - ex: +14155552671")],-1))]),n("tr",null,[n("td",null,[s[77]||(s[77]=n("code",null,"register_type",-1)),s[78]||(s[78]=l()),a(e,{type:"danger",text:"required"})]),s[79]||(s[79]=n("td",null,"string",-1)),s[80]||(s[80]=n("td",null,[l("회원가입 형식입니다. "),n("br"),l(" - E : 이메일 "),n("br"),l(" - S : 소셜")],-1))]),n("tr",null,[n("td",null,[s[81]||(s[81]=n("code",null,"is_push_agree",-1)),s[82]||(s[82]=l()),a(e,{type:"danger",text:"required"})]),s[83]||(s[83]=n("td",null,"boolean",-1)),s[84]||(s[84]=n("td",null,"푸시 알림 동의 여부입니다.",-1))]),n("tr",null,[n("td",null,[s[85]||(s[85]=n("code",null,"is_marketing_agree",-1)),s[86]||(s[86]=l()),a(e,{type:"danger",text:"required"})]),s[87]||(s[87]=n("td",null,"boolean",-1)),s[88]||(s[88]=n("td",null,"마케팅 수신 동의 여부입니다.",-1))]),n("tr",null,[n("td",null,[s[89]||(s[89]=n("code",null,"national_code",-1)),s[90]||(s[90]=l()),a(e,{type:"danger",text:"required"})]),s[91]||(s[91]=n("td",null,"string",-1)),s[92]||(s[92]=n("td",null,[l("국가 코드입니다. "),n("br"),l(" - WITHNOX : KR "),n("br"),l(" - ADDNOX : ISO code (2)")],-1))])])]),s[218]||(s[218]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/addnox/auth/email/signup</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer valid_token_here</span></span></span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;first_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;last_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;birthdate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;register_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;is_push_agree&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;is_marketing_agree&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;national_code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),a(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:t(({value:i,isActive:p})=>s[94]||(s[94]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:t(({value:i,isActive:p})=>s[95]||(s[95]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:t(({value:i,isActive:p})=>s[96]||(s[96]=[n("p",null,"회원가입이 성공하면 로그인이 성공한것 처럼 토큰을 전달해줍니다.",-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"access_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"refresh_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"refresh_expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"token_type"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:p})=>s[97]||(s[97]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Email is not valid"),n("td",null,"유효하지 않은 이메일 형식입니다.")]),n("tr",null,[n("td",null,"401"),n("td",null,"Token is invalid"),n("td",null,"유효하지 않은 토큰입니다.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Same email is already registered"),n("td",null,"이미 회원가입한 이메일입니다.")]),n("tr",null,[n("td",null,"500"),n("td",null,"Failed to sign up user"),n("td",null,"회원가입을 실패하였습니다.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Email is not valid"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[219]||(s[219]=n("h3",{id:"비밀번호-초기화",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#비밀번호-초기화"},[n("span",null,[n("strong",null,"비밀번호 초기화")])])],-1)),s[220]||(s[220]=n("p",null,"비밀번호 초기화를 위해 사용자의 이메일로 리셋 이메일을 보내주는 API입니다.",-1)),s[221]||(s[221]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/addnox/auth/send-reset-mail ")],-1)),s[222]||(s[222]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[102]||(s[102]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[98]||(s[98]=n("code",null,"email",-1)),s[99]||(s[99]=l()),a(e,{type:"danger",text:"required"})]),s[100]||(s[100]=n("td",null,"string",-1)),s[101]||(s[101]=n("td",null,"이메일 값입니다.",-1))])])]),s[223]||(s[223]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/addnox/auth/phone-number-validation</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),a(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:t(({value:i,isActive:p})=>s[103]||(s[103]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:t(({value:i,isActive:p})=>s[104]||(s[104]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:t(({value:i,isActive:p})=>s[105]||(s[105]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"statusCode"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"message"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"User reset password email send successfully"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:p})=>s[106]||(s[106]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"User signed up using a social account"),n("td",null,"소셜 계정으로 회원가입한 유저입니다.")]),n("tr",null,[n("td",null,"404"),n("td",null,"User ID not found"),n("td",null,"등록된 유저가 아닙니다.")]),n("tr",null,[n("td",null,"500"),n("td",null,"Email send failed"),n("td",null,"해당 이메일로 전송이 실패하였습니다.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"User id is not found"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[224]||(s[224]=n("h3",{id:"아이디-계정-찾기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#아이디-계정-찾기"},[n("span",null,[n("strong",null,"아이디(계정) 찾기")])])],-1)),s[225]||(s[225]=n("p",null,"아이디 또는 계정을 유저의 전화번호를 통해 찾는 API입니다. SMS 인증 메세지 전송 API 호출 후 불러야 합니다.",-1)),s[226]||(s[226]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/addnox/auth/find-id-by-phone ")],-1)),s[227]||(s[227]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[115]||(s[115]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[107]||(s[107]=n("code",null,"phone",-1)),s[108]||(s[108]=l()),a(e,{type:"danger",text:"required"})]),s[109]||(s[109]=n("td",null,"string",-1)),s[110]||(s[110]=n("td",null,[l("전화번호 값이 E.164 format 이어야 합니다. "),n("br"),l(" - ex: +14155552671")],-1))]),n("tr",null,[n("td",null,[s[111]||(s[111]=n("code",null,"validnum",-1)),s[112]||(s[112]=l()),a(e,{type:"danger",text:"required"})]),s[113]||(s[113]=n("td",null,"string",-1)),s[114]||(s[114]=n("td",null,"SMS 인증 메세지로 전송된 6자리 번호입니다.",-1))])])]),s[228]||(s[228]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/addnox/auth/phone-number-validation</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;validnum&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),a(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:t(({value:i,isActive:p})=>s[116]||(s[116]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:t(({value:i,isActive:p})=>s[117]||(s[117]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:t(({value:i,isActive:p})=>s[118]||(s[118]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"email"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"your@email.com"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"provider"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"naver"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:p})=>s[119]||(s[119]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Validation code is expired"),n("td",null,"인증번호가 만료되었습니다.")]),n("tr",null,[n("td",null,"400"),n("td",null,"Validation code is invalid"),n("td",null,"잘못된 인증번호입니다.")]),n("tr",null,[n("td",null,"403"),n("td",null,"User previously deleted"),n("td",null,"이미 탈퇴 처리된 사용자입니다.")]),n("tr",null,[n("td",null,"404"),n("td",null,"User id is not found"),n("td",null,"해당 이메일로 회원가입한 사용자를 찾을 수 없습니다.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Validation code is expired"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[229]||(s[229]=n("h3",{id:"소셜-로그인",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#소셜-로그인"},[n("span",null,[n("strong",null,"소셜 로그인")])])],-1)),s[230]||(s[230]=n("p",null,"소셜 로그인을 진행하는 API입니다. 파라미터로 소셜 provider를 전달해야합니다. 소셜 공급자별로 토큰이 다르기 때문에 Body Parameter 값 두개 중 하나만 보내도 됩니다.",-1)),s[231]||(s[231]=n("p",null,[n("code",null,"403 에러"),l("는 소셜 회원가입을 진행하지 않은 유저이므로 소셜 회원가입으로 분기하시면 됩니다.")],-1)),s[232]||(s[232]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/addnox/auth/social-signin/{provider} ")],-1)),s[233]||(s[233]=n("p",null,[n("strong",null,"Parameters")],-1)),n("table",null,[s[124]||(s[124]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[120]||(s[120]=n("code",null,"provider",-1)),s[121]||(s[121]=l()),a(e,{type:"danger",text:"required"})]),s[122]||(s[122]=n("td",null,"string",-1)),s[123]||(s[123]=n("td",null,[l("소셜 provider 값입니다. "),n("br"),l(" - 애플: apple "),n("br"),l(" - 구글: google "),n("br"),l(" - 페이스북(메타): facebook "),n("br"),l(" - 네이버: naver "),n("br"),l(" - 카카오: kakao")],-1))])])]),s[234]||(s[234]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[133]||(s[133]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[125]||(s[125]=n("code",null,"id_token",-1)),s[126]||(s[126]=l()),a(e,{type:"info",text:"optional"})]),s[127]||(s[127]=n("td",null,"string",-1)),s[128]||(s[128]=n("td",null,"provider가 apple,google,kakao 인 경우에는 필수값",-1))]),n("tr",null,[n("td",null,[s[129]||(s[129]=n("code",null,"access_token",-1)),s[130]||(s[130]=l()),a(e,{type:"info",text:"optional"})]),s[131]||(s[131]=n("td",null,"string",-1)),s[132]||(s[132]=n("td",null,"provider가 facebook, naver 인 경우에는 필수값",-1))])])]),s[235]||(s[235]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/addnox/auth/social-signin/google</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;id_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),a(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:t(({value:i,isActive:p})=>s[134]||(s[134]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:t(({value:i,isActive:p})=>s[135]||(s[135]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:t(({value:i,isActive:p})=>s[136]||(s[136]=[n("p",null,[l("이미 소셜 회원가입한 유저라면 정상적으로 로그인이 진행되어 "),n("code",null,"access_token"),l("을 발급합니다.")],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"access_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"refresh_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"refresh_expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"token_type"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:p})=>s[137]||(s[137]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"User is signed up with email type"),n("td",null,"이메일 방식으로 회원가입한 유저입니다.")]),n("tr",null,[n("td",null,"401"),n("td",null,"User is Deleted"),n("td",null,"회원탈퇴한 계정입니다.")]),n("tr",null,[n("td",null,"403"),n("td",null,"User is not valid, please sign up"),n("td",null,"소셜 회원가입이 필요한 유저입니다.")]),n("tr",null,[n("td",null,"404"),n("td",null,"User is signed up with {social_type} type"),n("td",null,"다른 social provider로 회원가입한 유저입니다.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Invalid {provider} access token"),n("td",null,"유효하지 않은 토큰입니다.")]),n("tr",null,[n("td",null,"423"),n("td",null,"Access denied. Account blocked"),n("td",null,"차단된 계정입니다.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"User is not valid, please sign up"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[236]||(s[236]=n("h3",{id:"소셜-회원가입",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#소셜-회원가입"},[n("span",null,[n("strong",null,"소셜 회원가입")])])],-1)),s[237]||(s[237]=n("p",null,[l("사용자의 정보를 가지고 소셜 회원가입을 진행합니다. 일반 회원가입과 마찬가지로 SMS 번호 검증을 통한 "),n("code",null,"valid_token"),l("이 필요합니다.")],-1)),s[238]||(s[238]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),l(" /api/v1/addnox/auth/social/signup ")],-1)),s[239]||(s[239]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[s[142]||(s[142]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[138]||(s[138]=n("code",null,"Authorization",-1)),s[139]||(s[139]=l()),a(e,{type:"danger",text:"required"})]),s[140]||(s[140]=n("td",null,"Bearer",-1)),s[141]||(s[141]=n("td",null,"valid_token",-1))])])]),s[240]||(s[240]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[191]||(s[191]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[143]||(s[143]=n("code",null,"email",-1)),s[144]||(s[144]=l()),a(e,{type:"danger",text:"required"})]),s[145]||(s[145]=n("td",null,"string",-1)),s[146]||(s[146]=n("td",null,"이메일 값입니다.",-1))]),n("tr",null,[n("td",null,[s[147]||(s[147]=n("code",null,"first_name",-1)),s[148]||(s[148]=l()),a(e,{type:"danger",text:"required"})]),s[149]||(s[149]=n("td",null,"string",-1)),s[150]||(s[150]=n("td",null,"회원가입할 유저의 이름입니다.",-1))]),n("tr",null,[n("td",null,[s[151]||(s[151]=n("code",null,"last_name",-1)),s[152]||(s[152]=l()),a(e,{type:"danger",text:"required"})]),s[153]||(s[153]=n("td",null,"string",-1)),s[154]||(s[154]=n("td",null,"회원가입할 유저의 성입니다.",-1))]),n("tr",null,[n("td",null,[s[155]||(s[155]=n("code",null,"birthdate",-1)),s[156]||(s[156]=l()),a(e,{type:"danger",text:"required"})]),s[157]||(s[157]=n("td",null,"string",-1)),s[158]||(s[158]=n("td",null,[l("회원가입할 유저의 생년월일입니다(yyyymmdd). "),n("br"),l(" - 예시 : 19970101")],-1))]),n("tr",null,[n("td",null,[s[159]||(s[159]=n("code",null,"gender",-1)),s[160]||(s[160]=l()),a(e,{type:"danger",text:"required"})]),s[161]||(s[161]=n("td",null,"string",-1)),s[162]||(s[162]=n("td",null,[l("회원가입할 유저의 성별입니다 "),n("br"),l(" - M : 남성 "),n("br"),l(" - F : 여성 "),n("br"),l(" - N : 논바이너리 "),n("br"),l(" - P : 알려주고 싶지 않음")],-1))]),n("tr",null,[n("td",null,[s[163]||(s[163]=n("code",null,"phone",-1)),s[164]||(s[164]=l()),a(e,{type:"danger",text:"required"})]),s[165]||(s[165]=n("td",null,"string",-1)),s[166]||(s[166]=n("td",null,[l("전화번호 값이 E.164 format 이어야 합니다. "),n("br"),l(" - ex: +14155552671")],-1))]),n("tr",null,[n("td",null,[s[167]||(s[167]=n("code",null,"register_type",-1)),s[168]||(s[168]=l()),a(e,{type:"danger",text:"required"})]),s[169]||(s[169]=n("td",null,"string",-1)),s[170]||(s[170]=n("td",null,[l("회원가입 형식입니다. "),n("br"),l(" - E : 이메일 "),n("br"),l(" - S : 소셜")],-1))]),n("tr",null,[n("td",null,[s[171]||(s[171]=n("code",null,"social_id",-1)),s[172]||(s[172]=l()),a(e,{type:"danger",text:"required"})]),s[173]||(s[173]=n("td",null,"string",-1)),s[174]||(s[174]=n("td",null,"소셜 provider에 따라 고유 Sub 값 또는 ID를 보내주세요",-1))]),n("tr",null,[n("td",null,[s[175]||(s[175]=n("code",null,"social_type",-1)),s[176]||(s[176]=l()),a(e,{type:"danger",text:"required"})]),s[177]||(s[177]=n("td",null,"string",-1)),s[178]||(s[178]=n("td",null,[l("소셜 provider 값입니다. "),n("br"),l(" - 구글 : google "),n("br"),l(" - 애플 : apple "),n("br"),l(" - 페이스북(메타) : facebook "),n("br"),l(" - 네이버 : naver "),n("br"),l(" - 카카오 : kakao")],-1))]),n("tr",null,[n("td",null,[s[179]||(s[179]=n("code",null,"is_push_agree",-1)),s[180]||(s[180]=l()),a(e,{type:"danger",text:"required"})]),s[181]||(s[181]=n("td",null,"boolean",-1)),s[182]||(s[182]=n("td",null,"푸시 알림 동의 여부입니다.",-1))]),n("tr",null,[n("td",null,[s[183]||(s[183]=n("code",null,"is_marketing_agree",-1)),s[184]||(s[184]=l()),a(e,{type:"danger",text:"required"})]),s[185]||(s[185]=n("td",null,"boolean",-1)),s[186]||(s[186]=n("td",null,"마케팅 수신 동의 여부입니다.",-1))]),n("tr",null,[n("td",null,[s[187]||(s[187]=n("code",null,"national_code",-1)),s[188]||(s[188]=l()),a(e,{type:"danger",text:"required"})]),s[189]||(s[189]=n("td",null,"string",-1)),s[190]||(s[190]=n("td",null,[l("국가 코드입니다. "),n("br"),l(" - WITHNOX : KR "),n("br"),l(" - ADDNOX : ISO code (2)")],-1))])])]),s[241]||(s[241]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/addnox/auth/social/signup</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer valid_token_here</span></span></span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;first_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;last_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;birthdate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;register_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;social_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;social_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;is_push_agree&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;is_marketing_agree&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;national_code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),a(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:t(({value:i,isActive:p})=>s[192]||(s[192]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:t(({value:i,isActive:p})=>s[193]||(s[193]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:t(({value:i,isActive:p})=>s[194]||(s[194]=[n("p",null,[l("소셜 회원가입이 성공하면 정상적으로 로그인이 진행되어 "),n("code",null,"access_token"),l("을 발급합니다.")],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"access_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"refresh_token"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"refresh_expires_in"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"token_type"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"string"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:p})=>s[195]||(s[195]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Not authenticated"),n("td",null,"유효하지않은 valid_token입니다.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),l(`
`),n("span",{class:"line"},[l("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),l(),n("span",{class:"token string"},'"Not authenticated"')]),l(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),l(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[242]||(s[242]=o(`<h2 id="공통-에러-처리" tabindex="-1"><a class="header-anchor" href="#공통-에러-처리"><span><strong>공통 에러 처리</strong></span></a></h2><p>모든 엔드포인트에서 공통적으로 응답하는 에러코드입니다.</p><p><strong>Error Response Example</strong></p><ul><li><code>401 Unauthorized</code>: 토큰이 잘못되었습니다.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Could not validate credentials&quot;</span> <span class="token comment">// 토큰이 잘못되었습니다.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>401 Unauthorized</code>: 토큰이 만료되었습니다.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Token is expired&quot;</span> <span class="token comment">// 토큰이 만료되었습니다.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>404 Not Found</code>: 리소스를 찾을 수 없습니다. URI를 다시 확인해주세요.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Resource not found&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>500 Internal Server Error</code>: 서버 에러입니다.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Internal server error. Please try again later.&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,4))])}const y=d(k,[["render",v]]),q=JSON.parse('{"path":"/api-guide/withnox-addnox/auth.html","title":"인증","lang":"ko-KR","frontmatter":{},"git":{"updatedTime":1745389493000,"contributors":[{"name":"Jeongtae Kim","username":"","email":"jeongtae.kim@nueyne.com","commits":14}],"changelog":[{"hash":"6357bd52e2f04a7810ab8ad799cd6fdb412954d9","time":1745389493000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ Elexir legacy country code update"},{"hash":"1aaf7d71f2d969d9e8aacc77957c925d4aded686","time":1742362885000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"소셜 회원가입 부분 변경"},{"hash":"b4d064cd3e1c8b0f938209dd68bec93d72b38a38","time":1740546404000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"📝 Updated find-id success response"},{"hash":"32319410f534d4ace4cb438d469f0597ebc761a5","time":1740041408000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"📝 Added account block description"},{"hash":"e6afb62703feaea2f4ccc0a3b818ec508ece18ac","time":1739756857000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ 기기 사용 기록 v2 API 문서 업데이트"},{"hash":"41f40281d3973c94112b274ff4ffa251d6627d03","time":1739177706000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"⚡️ Improved site performance"},{"hash":"ca238654fd69681844a3ae838ba0a1e52bff9a58","time":1736902017000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"📝 Deleted depreacted APIs at User and add Recent chart API"},{"hash":"b9f0eea618fbb02a13329c30a2f7f12e405166a3","time":1736835194000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"🐛 Fixed typo at find-id-by-phone error code contents"},{"hash":"cc3104e13e380dd3ed893d78fc1b5f6e65306b62","time":1736747583000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"🚑️ 이메일 회원가입 및 인증코드 검증 API에 오류코드 추가"},{"hash":"68f025460b1e1acfeb0b6e007ed28841bc14164f","time":1733976649000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"♻️ 인증, 유저, 기기, 베이스 스테이션 설명 수정 및 업데이트"},{"hash":"48240800afa7a7f7f7464caa05729a81d267fc91","time":1733814789000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"♻️ Fixed Auth page by removing pre-signup."},{"hash":"87d7689da0f91da3d66bb43da27cc2bab624ddeb","time":1733794704000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ 베이스 스테이션과 기기 페이지 작성"},{"hash":"26c326791861134434142334f7f1222074f1dc59","time":1730955754000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"🚑️ Fixed wrong description in social login/signup"},{"hash":"f9c070111afc06eac9f2c5c0c76ad573d598f7ac","time":1730684176000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ Added Authentication page"}]},"filePathRelative":"api-guide/withnox-addnox/auth.md"}');export{y as comp,q as data};
