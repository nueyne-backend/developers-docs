import{_ as d,c,a as o,b as n,e as l,d as e,w as a,r as u,o as v}from"./app-BlYON7qD.js";const m={};function g(b,s){const r=u("Badge"),p=u("Tabs");return v(),c("div",null,[s[175]||(s[175]=o(`<h1 id="device" tabindex="-1"><a class="header-anchor" href="#device"><span><strong>Device</strong></span></a></h1><p>This page describes the APIs related to authentication for the LUX project.</p><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span><strong>Introduction</strong></span></a></h2><p>The LUX Device API provides functions to perform device-related tasks such as create device log, set-my-device, get-all-device and etc.</p><h2 id="authentication" tabindex="-1"><a class="header-anchor" href="#authentication"><span><strong>Authentication</strong></span></a></h2><p>Some authentication APIs require an authentication token. Please include the authentication token in the <code>Authorization</code> header to make authenticated API requests.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">Authorization: Bearer your_token_here</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Replace <code>your_token_here</code> with the access token obtained during the authentication process.</p><h2 id="endpoints" tabindex="-1"><a class="header-anchor" href="#endpoints"><span><strong>Endpoints</strong></span></a></h2><h3 id="get-single-device-information" tabindex="-1"><a class="header-anchor" href="#get-single-device-information"><span><strong>Get Single Device Information</strong></span></a></h3><p>Retrieves information for a single device belonging to a user&#39;s child account.</p><div class="api-endpoint"><span class="api-method">GET</span> /api/v1/lux/device/child-device </div><p><strong>Headers</strong></p>`,13)),n("table",null,[s[4]||(s[4]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[0]||(s[0]=n("code",null,"Authorization",-1)),s[1]||(s[1]=e()),l(r,{type:"danger",text:"required"})]),s[2]||(s[2]=n("td",null,"Bearer",-1)),s[3]||(s[3]=n("td",null,"access_token",-1))])])]),s[176]||(s[176]=n("p",null,[n("strong",null,"Parameters")],-1)),n("table",null,[s[9]||(s[9]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[5]||(s[5]=n("code",null,"real_user_id",-1)),s[6]||(s[6]=e()),l(r,{type:"danger",text:"required"})]),s[7]||(s[7]=n("td",null,"integer",-1)),s[8]||(s[8]=n("td",null,"The ID of the child account.",-1))])])]),s[177]||(s[177]=o(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">GET /api/v1/lux/device/child-device?real_user_id=1 HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),l(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:t,isActive:i})=>s[10]||(s[10]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:t,isActive:i})=>s[11]||(s[11]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:t,isActive:i})=>s[12]||(s[12]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"real_user_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"project_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"hardware_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"now_firmware_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"unique_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"serial_code"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"device_alias"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"mac_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"created_at"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"2024-11-28T02:15:53.610Z"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"last_log_file_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0")]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:i})=>s[13]||(s[13]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages for each HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Not authorized user"),n("td",null,"User is not authorized.")]),n("tr",null,[n("td",null,"404"),n("td",null,"Device not found"),n("td",null,"Device does not exist.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Not authorized user"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[178]||(s[178]=n("h3",{id:"get-all-child-accounts-and-device-information",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#get-all-child-accounts-and-device-information"},[n("span",null,[n("strong",null,"Get All Child Accounts and Device Information")])])],-1)),s[179]||(s[179]=n("p",null,"Retrieves all child accounts and their associated device information for the current user. This should always be called first on the Home screen to obtain the real_user_id and device_id. Note: The API name is not intuitive and is planned to be changed.",-1)),s[180]||(s[180]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"GET"),e(" /api/v1/lux/device/get-all-device ")],-1)),s[181]||(s[181]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[s[18]||(s[18]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[14]||(s[14]=n("code",null,"Authorization",-1)),s[15]||(s[15]=e()),l(r,{type:"danger",text:"required"})]),s[16]||(s[16]=n("td",null,"Bearer",-1)),s[17]||(s[17]=n("td",null,"access_token",-1))])])]),s[182]||(s[182]=o(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">GET /api/v1/lux/device/get-all-device HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),l(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:t,isActive:i})=>s[19]||(s[19]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:t,isActive:i})=>s[20]||(s[20]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:t,isActive:i})=>s[21]||(s[21]=[n("p",null,[e("Returns data in an array format. An empty array is returned if there are no connected devices or child accounts. "),n("br"),e(" last_log_file_id is the number of the last log file stored on the server. Compare this with the log file number from the device. If the device's log file number is greater than last_log_file_id, it means there are unsent logs on the device, and you should call the POST /devlog endpoint. If the numbers are the same, all logs have been successfully transmitted.")],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"[")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"real_user_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"project_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"hardware_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"now_firmware_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"firmware_version"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"1.0.0"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"unique_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"serial_code"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"device_alias"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"mac_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"created_at"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"2024-11-28T02:27:34.136Z"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"last_log_file_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"root_user_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"first_name"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"last_name"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"birthdate"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"gender"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"')]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"]")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:i})=>s[22]||(s[22]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages for each HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"User is None"),n("td",null,"User is not authorized.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"User is None"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[183]||(s[183]=n("h3",{id:"register-a-device",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#register-a-device"},[n("span",null,[n("strong",null,"Register a Device")])])],-1)),s[184]||(s[184]=n("p",null,"Manually registers a device to a child account.",-1)),s[185]||(s[185]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),e(" /api/v1/lux/device/set-my-device ")],-1)),s[186]||(s[186]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[s[27]||(s[27]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[23]||(s[23]=n("code",null,"Authorization",-1)),s[24]||(s[24]=e()),l(r,{type:"danger",text:"required"})]),s[25]||(s[25]=n("td",null,"Bearer",-1)),s[26]||(s[26]=n("td",null,"access_token",-1))])])]),s[187]||(s[187]=n("p",null,[n("strong",null,"Parameters")],-1)),n("table",null,[s[44]||(s[44]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[28]||(s[28]=n("code",null,"serial_code",-1)),s[29]||(s[29]=e()),l(r,{type:"danger",text:"required"})]),s[30]||(s[30]=n("td",null,"string",-1)),s[31]||(s[31]=n("td",null,"The serial code of the device.",-1))]),n("tr",null,[n("td",null,[s[32]||(s[32]=n("code",null,"mac_id",-1)),s[33]||(s[33]=e()),l(r,{type:"danger",text:"required"})]),s[34]||(s[34]=n("td",null,"string",-1)),s[35]||(s[35]=n("td",null,"The MAC address of the device.",-1))]),n("tr",null,[n("td",null,[s[36]||(s[36]=n("code",null,"unique_id",-1)),s[37]||(s[37]=e()),l(r,{type:"danger",text:"required"})]),s[38]||(s[38]=n("td",null,"string",-1)),s[39]||(s[39]=n("td",null,"The unique ID (UUID) of the device.",-1))]),n("tr",null,[n("td",null,[s[40]||(s[40]=n("code",null,"real_user_id",-1)),s[41]||(s[41]=e()),l(r,{type:"danger",text:"required"})]),s[42]||(s[42]=n("td",null,"integer",-1)),s[43]||(s[43]=n("td",null,"The ID of the child account.",-1))])])]),s[188]||(s[188]=o(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/device/set-my-device?serial_code=test1&amp;mac_id=test1234&amp;unique_id=test1234&amp;real_user_id=1 HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),l(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:t,isActive:i})=>s[45]||(s[45]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:t,isActive:i})=>s[46]||(s[46]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:t,isActive:i})=>s[47]||(s[47]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"statuscode"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"message"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"device connected"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:i})=>s[48]||(s[48]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages for each HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Not authorized user"),n("td",null,"User is not authorized.")]),n("tr",null,[n("td",null,"404"),n("td",null,"Not Found Device"),n("td",null,"Device does not exist.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Already Connected Device"),n("td",null,"The device is already connected to another user.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Not authorized user"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[189]||(s[189]=n("h3",{id:"unregister-a-device",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#unregister-a-device"},[n("span",null,[n("strong",null,"Unregister a Device")])])],-1)),s[190]||(s[190]=n("p",null,"Unregisters a device from a child account.",-1)),s[191]||(s[191]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"PATCH"),e(" /api/v1/lux/device/un-connect ")],-1)),s[192]||(s[192]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[s[53]||(s[53]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[49]||(s[49]=n("code",null,"Authorization",-1)),s[50]||(s[50]=e()),l(r,{type:"danger",text:"required"})]),s[51]||(s[51]=n("td",null,"Bearer",-1)),s[52]||(s[52]=n("td",null,"access_token",-1))])])]),s[193]||(s[193]=n("p",null,[n("strong",null,"Parameters")],-1)),n("table",null,[s[62]||(s[62]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[54]||(s[54]=n("code",null,"unique_id",-1)),s[55]||(s[55]=e()),l(r,{type:"danger",text:"required"})]),s[56]||(s[56]=n("td",null,"string",-1)),s[57]||(s[57]=n("td",null,"The unique ID (UUID) of the device.",-1))]),n("tr",null,[n("td",null,[s[58]||(s[58]=n("code",null,"real_user_id",-1)),s[59]||(s[59]=e()),l(r,{type:"danger",text:"required"})]),s[60]||(s[60]=n("td",null,"integer",-1)),s[61]||(s[61]=n("td",null,"The ID of the child account.",-1))])])]),s[194]||(s[194]=o(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">PATCH /api/v1/lux/device/un-connect?unique_id=test1&amp;real_user_id=1 HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),l(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:t,isActive:i})=>s[63]||(s[63]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:t,isActive:i})=>s[64]||(s[64]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:t,isActive:i})=>s[65]||(s[65]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"statusCode"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"message"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"device unconnected"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:i})=>s[66]||(s[66]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages for each HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Not authorized user"),n("td",null,"User is not authorized.")]),n("tr",null,[n("td",null,"404"),n("td",null,"Not Found Device"),n("td",null,"Device does not exist.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Not authorized user"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[195]||(s[195]=n("h3",{id:"check-device-status",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#check-device-status"},[n("span",null,[n("strong",null,"Check Device Status")])])],-1)),s[196]||(s[196]=n("p",null,"This API verifies if a device can be connected or registered. It must be called before attempting to connect a device.",-1)),s[197]||(s[197]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"GET"),e(" /api/v1/lux/device/check-device ")],-1)),s[198]||(s[198]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[s[71]||(s[71]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[67]||(s[67]=n("code",null,"Authorization",-1)),s[68]||(s[68]=e()),l(r,{type:"danger",text:"required"})]),s[69]||(s[69]=n("td",null,"Bearer",-1)),s[70]||(s[70]=n("td",null,"access_token",-1))])])]),s[199]||(s[199]=n("p",null,[n("strong",null,"Parameters")],-1)),n("table",null,[s[76]||(s[76]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[72]||(s[72]=n("code",null,"unique_id",-1)),s[73]||(s[73]=e()),l(r,{type:"danger",text:"required"})]),s[74]||(s[74]=n("td",null,"string",-1)),s[75]||(s[75]=n("td",null,"The unique ID (UUID) of the device.",-1))])])]),s[200]||(s[200]=o(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">GET /api/v1/lux/device/check-device?unique_id=test1 HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),l(p,{data:[{id:'<span class="ok-tab">200 ok (Device Connectable)</span>'},{id:'<span class="ok-tab">200 ok (Device Registrable)</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:t,isActive:i})=>s[77]||(s[77]=[n("span",{class:"ok-tab"},"200 ok (Device Connectable)",-1)])),title1:a(({value:t,isActive:i})=>s[78]||(s[78]=[n("span",{class:"ok-tab"},"200 ok (Device Registrable)",-1)])),title2:a(({value:t,isActive:i})=>s[79]||(s[79]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:t,isActive:i})=>s[80]||(s[80]=[n("p",null,'If the device is already registered to the user, you can proceed with the connection flow. The detail message will indicate "Connection Confirmed".',-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Connection Confirmed"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"device_data"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"real_user_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"project_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"hardware_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"now_firmware_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"unique_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"serial_code"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"device_alias"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"mac_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"created_at"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"2024-11-28T04:19:43.007Z"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"last_log_file_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:i})=>s[81]||(s[81]=[n("p",null,"If the device is available for registration, the detail message will indicate that it is registrable.",-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Device Registerable"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"device_data"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"real_user_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"project_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"hardware_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"now_firmware_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"unique_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"serial_code"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"device_alias"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"mac_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"created_at"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"2024-11-28T04:19:43.007Z"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"last_log_file_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab2:a(({value:t,isActive:i})=>s[82]||(s[82]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages for each HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Not authorized user"),n("td",null,"User is not authorized.")]),n("tr",null,[n("td",null,"404"),n("td",null,"Not Found Device"),n("td",null,"Device does not exist.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Already Connected Device"),n("td",null,"The device is already connected to another user.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Not authorized user"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[201]||(s[201]=n("h3",{id:"update-device-alias",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#update-device-alias"},[n("span",null,[n("strong",null,"Update Device Alias")])])],-1)),s[202]||(s[202]=n("p",null,"Updates the alias of a device.",-1)),s[203]||(s[203]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"PATCH"),e(" /api/v1/lux/device/update-alias ")],-1)),s[204]||(s[204]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[s[87]||(s[87]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[83]||(s[83]=n("code",null,"Authorization",-1)),s[84]||(s[84]=e()),l(r,{type:"danger",text:"required"})]),s[85]||(s[85]=n("td",null,"Bearer",-1)),s[86]||(s[86]=n("td",null,"access_token",-1))])])]),s[205]||(s[205]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[100]||(s[100]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[88]||(s[88]=n("code",null,"device_id",-1)),s[89]||(s[89]=e()),l(r,{type:"danger",text:"required"})]),s[90]||(s[90]=n("td",null,"integer",-1)),s[91]||(s[91]=n("td",null,"The ID of the device.",-1))]),n("tr",null,[n("td",null,[s[92]||(s[92]=n("code",null,"real_user_id",-1)),s[93]||(s[93]=e()),l(r,{type:"danger",text:"required"})]),s[94]||(s[94]=n("td",null,"integer",-1)),s[95]||(s[95]=n("td",null,"The ID of the child account.",-1))]),n("tr",null,[n("td",null,[s[96]||(s[96]=n("code",null,"device_alias",-1)),s[97]||(s[97]=e()),l(r,{type:"danger",text:"required"})]),s[98]||(s[98]=n("td",null,"string",-1)),s[99]||(s[99]=n("td",null,"The new alias for the device.",-1))])])]),s[206]||(s[206]=o(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">PATCH /api/v1/lux/device/update-alias HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line">{</span>
<span class="line">  &quot;device_id&quot;: 0,</span>
<span class="line">  &quot;real_user_id&quot;: 0,</span>
<span class="line">  &quot;device_alias&quot;: &quot;string&quot;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),l(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:t,isActive:i})=>s[101]||(s[101]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:t,isActive:i})=>s[102]||(s[102]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:t,isActive:i})=>s[103]||(s[103]=[n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"real_user_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"project_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"hardware_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"now_firmware_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"unique_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"serial_code"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"device_alias"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"mac_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"created_at"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"2024-11-28T04:32:07.540Z"'),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("  "),n("span",{class:"token property"},'"last_log_file_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"0")]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:i})=>s[104]||(s[104]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages for each HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Not authorized user"),n("td",null,"User is not authorized.")]),n("tr",null,[n("td",null,"404"),n("td",null,"Not Found Device"),n("td",null,"Device does not exist.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Not Connected Device"),n("td",null,"The device is already connected to another user.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Not authorized user"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[207]||(s[207]=o('<h3 id="upload-device-usage-log" tabindex="-1"><a class="header-anchor" href="#upload-device-usage-log"><span><strong>Upload Device Usage Log</strong></span></a></h3><p>This is a unified API to meet new requirements. It has the following functions:</p><ul><li>Creates a temporary usage log by being called 30 seconds after device - usage starts.</li><li>Updates the temporary usage log when the Bluetooth connection is lost - during use.</li><li>Updates the temporary log to a complete log when device usage ends.</li><li>Saves usage logs when there are logs to be sent from the device.</li></ul><div class="api-endpoint"><span class="api-method">POST</span> /api/v1/lux/device/devlog </div><p><strong>Headers</strong></p>',5)),n("table",null,[s[109]||(s[109]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[105]||(s[105]=n("code",null,"Authorization",-1)),s[106]||(s[106]=e()),l(r,{type:"danger",text:"required"})]),s[107]||(s[107]=n("td",null,"Bearer",-1)),s[108]||(s[108]=n("td",null,"access_token",-1))])])]),s[208]||(s[208]=n("p",null,[n("strong",null,"Body Parameters")],-1)),n("table",null,[s[139]||(s[139]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[110]||(s[110]=n("code",null,"log_arrays",-1)),s[111]||(s[111]=e()),l(r,{type:"danger",text:"required"})]),s[112]||(s[112]=n("td",null,"array",-1)),s[113]||(s[113]=n("td",null,"Container for log records.",-1))]),n("tr",null,[n("td",null,[s[114]||(s[114]=e("├ ",-1)),s[115]||(s[115]=n("code",null,"real_user_id",-1)),s[116]||(s[116]=e()),l(r,{type:"danger",text:"required"})]),s[117]||(s[117]=n("td",null,"integer",-1)),s[118]||(s[118]=n("td",null,"The ID of the child account.",-1))]),n("tr",null,[n("td",null,[s[119]||(s[119]=e("├ ",-1)),s[120]||(s[120]=n("code",null,"device_id",-1)),s[121]||(s[121]=e()),l(r,{type:"danger",text:"required"})]),s[122]||(s[122]=n("td",null,"integer",-1)),s[123]||(s[123]=n("td",null,"The ID of the device.",-1))]),n("tr",null,[n("td",null,[s[124]||(s[124]=e("├ ",-1)),s[125]||(s[125]=n("code",null,"unique_id",-1)),s[126]||(s[126]=e()),l(r,{type:"danger",text:"required"})]),s[127]||(s[127]=n("td",null,"string",-1)),s[128]||(s[128]=n("td",null,"The unique ID (UUID) of the device.",-1))]),n("tr",null,[n("td",null,[s[129]||(s[129]=e("├ ",-1)),s[130]||(s[130]=n("code",null,"detail_data",-1)),s[131]||(s[131]=e()),l(r,{type:"danger",text:"required"})]),s[132]||(s[132]=n("td",null,"json",-1)),s[133]||(s[133]=n("td",null,"Device usage log.",-1))]),n("tr",null,[n("td",null,[s[134]||(s[134]=e("├ ",-1)),s[135]||(s[135]=n("code",null,"log_file_id",-1)),s[136]||(s[136]=e()),l(r,{type:"info",text:"optional"})]),s[137]||(s[137]=n("td",null,"integer",-1)),s[138]||(s[138]=n("td",null,"Device usage log ID (refers to the shortlog file_id).",-1))])])]),n("details",null,[s[157]||(s[157]=n("summary",null,[n("strong",null,"📌 detail_data Structure")],-1)),s[158]||(s[158]=n("p",null,[n("code",null,"detail_data"),e(" includes the following fields:")],-1)),n("table",null,[s[156]||(s[156]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"Description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[140]||(s[140]=n("code",null,"treatment_date",-1)),s[141]||(s[141]=e()),l(r,{type:"danger",text:"required"})]),s[142]||(s[142]=n("td",null,"string",-1)),s[143]||(s[143]=n("td",null,"Start time of device usage (ISO 8601 format).",-1))]),n("tr",null,[n("td",null,[s[144]||(s[144]=n("code",null,"finish_flag",-1)),s[145]||(s[145]=e()),l(r,{type:"info",text:"optional"})]),s[146]||(s[146]=n("td",null,"integer",-1)),s[147]||(s[147]=n("td",null,"Type of shutdown. See below for details.",-1))]),n("tr",null,[n("td",null,[s[148]||(s[148]=n("code",null,"last_intensity",-1)),s[149]||(s[149]=e()),l(r,{type:"danger",text:"required"})]),s[150]||(s[150]=n("td",null,"integer",-1)),s[151]||(s[151]=n("td",null,"Last used intensity.",-1))]),n("tr",null,[n("td",null,[s[152]||(s[152]=n("code",null,"treatment_time",-1)),s[153]||(s[153]=e()),l(r,{type:"danger",text:"required"})]),s[154]||(s[154]=n("td",null,"integer",-1)),s[155]||(s[155]=n("td",null,"Usage duration in seconds.",-1))])])]),s[159]||(s[159]=o('<div class="hint-container tip"><p class="hint-container-title">finish_flag Value Descriptions</p><p><code>finish_flag</code> indicates the following shutdown states:</p><table><thead><tr><th>값</th><th>의미</th></tr></thead><tbody><tr><td>1</td><td>Normal Shutdown (Treatment completed normally).</td></tr><tr><td>2</td><td>Button Shutdown (Device turned off by long-pressing the power button during treatment).</td></tr><tr><td>3</td><td>App Shutdown (Device turned off by a command from the app during treatment).</td></tr><tr><td>4</td><td>Faulty Contacts Shutdown (Device turned off due to poor electrode contact with the skin).</td></tr><tr><td>5</td><td>VBUS Shutdown (Treatment stopped because the device was connected to a charger).</td></tr><tr><td>6</td><td>Factory Shutdown (Shutdown for factory testing).</td></tr></tbody></table></div>',1))]),s[209]||(s[209]=o(`<p><strong>Request Example</strong></p><p><strong>1. Upload Temporary Usage Log</strong></p><p>Sending <code>finish_flag</code> as null creates a temporary usage log. The <code>log_file_id</code> field can be omitted entirely. For <code>treatment_date</code>, if the app sends the current time (formatted) 30 seconds after usage starts, the server will subtract 30 seconds before saving it.</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/device/devlog HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line">{</span>
<span class="line">    &quot;log_arrays&quot;: [</span>
<span class="line">        {</span>
<span class="line">            &quot;real_user_id&quot;: 1,</span>
<span class="line">            &quot;device_id&quot;: 2,</span>
<span class="line">            &quot;unique_id&quot;: &quot;withnox_temp&quot;,</span>
<span class="line">            &quot;detail_data&quot;: {</span>
<span class="line">                &quot;treatment_date&quot;: &quot;2025-02-21T15:48:49&quot;,</span>
<span class="line">                &quot;finish_flag&quot;: null,  </span>
<span class="line">                &quot;last_intensity&quot;: 2,</span>
<span class="line">                &quot;treatment_time&quot;: 255555</span>
<span class="line">            }</span>
<span class="line">        }</span>
<span class="line">    ]</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. Update Temporary Usage Log</strong></p><p>If a temporary usage log exists on the server, it will be updated with the data provided.</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/device/devlog HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line">{</span>
<span class="line">    &quot;log_arrays&quot;: [</span>
<span class="line">        {</span>
<span class="line">            &quot;real_user_id&quot;: 1,</span>
<span class="line">            &quot;device_id&quot;: 2,</span>
<span class="line">            &quot;unique_id&quot;: &quot;withnox_temp&quot;,</span>
<span class="line">            &quot;detail_data&quot;: {</span>
<span class="line">                &quot;treatment_date&quot;: &quot;2025-02-21T15:48:49&quot;,</span>
<span class="line">                &quot;finish_flag&quot;: null,</span>
<span class="line">                &quot;last_intensity&quot;: 2,</span>
<span class="line">                &quot;treatment_time&quot;: 255555</span>
<span class="line">            }</span>
<span class="line">        }</span>
<span class="line">    ]</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. Complete Temporary Usage Log</strong></p><p>Sending <code>finish_flag</code> and <code>log_file_id</code> completes the temporary usage log.</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/device/devlog HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line">{</span>
<span class="line">    &quot;log_arrays&quot;: [</span>
<span class="line">        {</span>
<span class="line">            &quot;real_user_id&quot;: 1,</span>
<span class="line">            &quot;device_id&quot;: 2,</span>
<span class="line">            &quot;unique_id&quot;: &quot;withnox_temp&quot;,</span>
<span class="line">            &quot;detail_data&quot;: {</span>
<span class="line">                &quot;treatment_date&quot;: &quot;2025-02-14T15:48:49&quot;,</span>
<span class="line">                &quot;finish_flag&quot;: 2,</span>
<span class="line">                &quot;last_intensity&quot;: 25,</span>
<span class="line">                &quot;treatment_time&quot;: 500000</span>
<span class="line">            },</span>
<span class="line">            &quot;log_file_id&quot;: 1</span>
<span class="line">        }</span>
<span class="line">    ]</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. Upload Usage Logs</strong></p><p>Multiple logs can be uploaded.</p><ul><li>If a temporary usage log exists on the server, the first record in the submitted array will overwrite the temporary log.</li></ul><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/device/devlog HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line">{</span>
<span class="line">    &quot;log_arrays&quot;: [</span>
<span class="line">        {</span>
<span class="line">            &quot;real_user_id&quot;: 1,</span>
<span class="line">            &quot;device_id&quot;: 2,</span>
<span class="line">            &quot;unique_id&quot;: &quot;withnox_temp&quot;,</span>
<span class="line">            &quot;detail_data&quot;: {</span>
<span class="line">                &quot;treatment_date&quot;: &quot;2025-02-14T15:48:49&quot;,</span>
<span class="line">                &quot;finish_flag&quot;: 2,</span>
<span class="line">                &quot;last_intensity&quot;: 25,</span>
<span class="line">                &quot;treatment_time&quot;: 500000</span>
<span class="line">            },</span>
<span class="line">            &quot;log_file_id&quot;: 1</span>
<span class="line">        },</span>
<span class="line">                {</span>
<span class="line">            &quot;real_user_id&quot;: 1,</span>
<span class="line">            &quot;device_id&quot;: 2,</span>
<span class="line">            &quot;unique_id&quot;: &quot;withnox_temp&quot;,</span>
<span class="line">            &quot;detail_data&quot;: {</span>
<span class="line">                &quot;treatment_date&quot;: &quot;2025-02-15T15:48:49&quot;,</span>
<span class="line">                &quot;finish_flag&quot;: 2,</span>
<span class="line">                &quot;last_intensity&quot;: 25,</span>
<span class="line">                &quot;treatment_time&quot;: 500000</span>
<span class="line">            },</span>
<span class="line">            &quot;log_file_id&quot;: 2</span>
<span class="line">        },</span>
<span class="line">        // etc</span>
<span class="line">    ]</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,15)),l(p,{data:[{id:'<span class="ok-tab">200 OK (Temporary Usage Log)</span>'},{id:'<span class="ok-tab">200 OK (Usage Log Upload)</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:t,isActive:i})=>s[160]||(s[160]=[n("span",{class:"ok-tab"},"200 OK (Temporary Usage Log)",-1)])),title1:a(({value:t,isActive:i})=>s[161]||(s[161]=[n("span",{class:"ok-tab"},"200 OK (Usage Log Upload)",-1)])),title2:a(({value:t,isActive:i})=>s[162]||(s[162]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:t,isActive:i})=>s[163]||(s[163]=[n("p",null,"The following response is returned when creating or updating a temporary usage log.",-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"statusCode"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"message"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Temp devlog saved successfully"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:i})=>s[164]||(s[164]=[n("p",null,"The following response is returned when completing a temporary log or uploading complete logs.",-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"statusCode"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},",")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"message"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Devlog saved successfully"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab2:a(({value:t,isActive:i})=>s[165]||(s[165]=[n("p",null,[n("strong",null,"Error Response"),e(" Provides API status codes and messages for each HTTP status code. Refer to the table below.")],-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Not authorized user"),n("td",null,"User is not authorized.")]),n("tr",null,[n("td",null,"404"),n("td",null,"Not Found Device"),n("td",null,"Device does not exist.")]),n("tr",null,[n("td",null,"404"),n("td",null,"Not Found User"),n("td",null,"Child account does not exist.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Not Connected Device"),n("td",null,"The device is already connected to another user.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Update Device Log Failed or Create Device Log Failed"),n("td",null,"서버 에러")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Not Found Device"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[210]||(s[210]=n("h3",{id:"send-device-impedance-error-notification",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#send-device-impedance-error-notification"},[n("span",null,[n("strong",null,"Send Device Impedance Error Notification")])])],-1)),s[211]||(s[211]=n("p",null,"API to send a notification (Alimtalk) when an impedance error occurs on the device.",-1)),s[212]||(s[212]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"POST"),e(" /api/v1/lux/device/alimtalk ")],-1)),s[213]||(s[213]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[s[170]||(s[170]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[s[166]||(s[166]=n("code",null,"Authorization",-1)),s[167]||(s[167]=e()),l(r,{type:"danger",text:"required"})]),s[168]||(s[168]=n("td",null,"Bearer",-1)),s[169]||(s[169]=n("td",null,"access_token",-1))])])]),s[214]||(s[214]=o(`<p><strong>Request Example</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/lux/device/alimtalk HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response Example</strong></p>`,3)),l(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:t,isActive:i})=>s[171]||(s[171]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:t,isActive:i})=>s[172]||(s[172]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:t,isActive:i})=>s[173]||(s[173]=[n("p",null,"If the notification is sent successfully, it returns 200 OK with no body.",-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token null keyword"},"null")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab1:a(({value:t,isActive:i})=>s[174]||(s[174]=[n("p",null,[n("strong",null,"Error Response")],-1),n("p",null,"Provides API status codes and messages for each HTTP status code. Refer to the table below.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"403"),n("td",null,"Phone number is not found"),n("td",null,"User's phone number cannot be found.")]),n("tr",null,[n("td",null,"409"),n("td",null,"Alimtalk send failed"),n("td",null,"Notification sending failed (contact server admin).")]),n("tr",null,[n("td",null,"500"),n("td",null,"Internal Server Error"),n("td",null,"Contact server admin.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),e(`
`),n("span",{class:"line"},[e("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Alimtalk send failed"')]),e(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[215]||(s[215]=o(`<h2 id="common-error-handling" tabindex="-1"><a class="header-anchor" href="#common-error-handling"><span><strong>Common Error Handling</strong></span></a></h2><p>These are error codes that are commonly returned by all endpoints.</p><p><strong>Error Response Example</strong></p><ul><li><code>401 Unauthorized</code>: The token is invalid.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Could not validate credentials&quot;</span> <span class="token comment">// The token is invalid</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>401 Unauthorized</code>: The token has expired.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Token is expired&quot;</span> <span class="token comment">// The token has expired.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>404 Not Found</code>: The resource cannot be found. Please check the URI again.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Resource not found&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>500 Internal Server Error</code>: This is a server error.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Internal server error. Please try again later.&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,4))])}const y=d(m,[["render",g]]),h=JSON.parse('{"path":"/en/api-guide/lux/device.html","title":"Device","lang":"en-US","frontmatter":{},"git":{"updatedTime":1749449398000,"contributors":[{"name":"JeongTaeNueyne","username":"JeongTaeNueyne","email":"jeongtae.kim@nueyne.com","commits":2,"url":"https://github.com/JeongTaeNueyne"}],"changelog":[{"hash":"05a4a9f6cbd92e206cf8f3ad5b2068b63b976708","time":1749449398000,"email":"jeongtae.kim@nueyne.com","author":"JeongTaeNueyne","message":"✨ Added Lux User api documentation"},{"hash":"b172423d86a9b71ac40771618a26289f8058754e","time":1749445680000,"email":"jeongtae.kim@nueyne.com","author":"JeongTaeNueyne","message":"✨ Update API guide for Lux device"}]},"filePathRelative":"en/api-guide/lux/device.md"}');export{y as comp,h as data};
