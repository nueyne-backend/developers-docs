import{_ as d,c,a as o,b as n,e,d as s,w as l,r as u,o as m}from"./app-BlYON7qD.js";const k={};function v(g,a){const t=u("Badge"),p=u("Tabs");return m(),c("div",null,[a[62]||(a[62]=o(`<h1 id="ota" tabindex="-1"><a class="header-anchor" href="#ota"><span><strong>OTA</strong></span></a></h1><p>해당 페이지는 Withnox &amp; Addnox 프로젝트의 펌웨어 OTA에 관련된 API를 설명해놓은 페이지입니다.</p><h2 id="소개" tabindex="-1"><a class="header-anchor" href="#소개"><span><strong>소개</strong></span></a></h2><p>Withnox &amp; Addnox OTA API는 디바이스 또는 베이스 스테이션의 펌웨어를 OTA(Over the Air) 방식을 통해 업데이트하기 위한 작업을 수행합니다. API를 호출하기전에 인증 페이지를 읽어보시길 추천드립니다.</p><p>API 흐름에 대한 시각적인 흐름도가 필요하다면 <a href="https://www.figma.com/board/PhHUx8wj4FGvTMPBxTnzVc/ADDNOX-API-Flow?node-id=0-1&amp;node-type=canvas&amp;t=HyUVwsn2ws5yzZVZ-0" target="_blank" rel="noopener noreferrer">Figma API Flow</a> 페이지를 참고해주세요.</p><h2 id="인증" tabindex="-1"><a class="header-anchor" href="#인증"><span><strong>인증</strong></span></a></h2><p>모든 OTA 관련 API는 인증 토큰을 필요로 합니다. 인증을 하기위해서 <code>Authorization</code> header 에 인증 토큰을 넣어서 API를 호출해주세요.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">Authorization: Bearer your_token_here</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>your_token_here</code> 에 인증 과정에서 획득한 access_token으로 대체해주세요.</p><h2 id="엔드포인트" tabindex="-1"><a class="header-anchor" href="#엔드포인트"><span><strong>엔드포인트</strong></span></a></h2><h3 id="최신-펌웨어-버전-확인하기" tabindex="-1"><a class="header-anchor" href="#최신-펌웨어-버전-확인하기"><span><strong>최신 펌웨어 버전 확인하기</strong></span></a></h3><p>등록된 기기의 펌웨어 버전을 확인합니다. device_id와 real_user_id를 가지고 최신 펌웨어를 확인합니다.</p><div class="api-endpoint"><span class="api-method">GET</span> /api/v1/addnox/firmware/latest/{device_id}/{real_user_id} </div><p><strong>Headers</strong></p>`,14)),n("table",null,[a[4]||(a[4]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[a[0]||(a[0]=n("code",null,"Authorization",-1)),a[1]||(a[1]=s()),e(t,{type:"danger",text:"required"})]),a[2]||(a[2]=n("td",null,"Bearer",-1)),a[3]||(a[3]=n("td",null,"access_token",-1))])])]),a[63]||(a[63]=n("p",null,[n("strong",null,"Parameters")],-1)),n("table",null,[a[13]||(a[13]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[a[5]||(a[5]=n("code",null,"device_id",-1)),a[6]||(a[6]=s()),e(t,{type:"danger",text:"required"})]),a[7]||(a[7]=n("td",null,"integer",-1)),a[8]||(a[8]=n("td",null,"기기의 id",-1))]),n("tr",null,[n("td",null,[a[9]||(a[9]=n("code",null,"real_user_id",-1)),a[10]||(a[10]=s()),e(t,{type:"danger",text:"required"})]),a[11]||(a[11]=n("td",null,"integer",-1)),a[12]||(a[12]=n("td",null,"자식 계정의 id",-1))])])]),a[64]||(a[64]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">GET /api/v1/addnox/firmware/latest/1/1 HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),e(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:l(({value:i,isActive:r})=>a[14]||(a[14]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:l(({value:i,isActive:r})=>a[15]||(a[15]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:l(({value:i,isActive:r})=>a[16]||(a[16]=[n("p",null,"해당 디바이스에 업데이트 할 수 있는 펌웨어가 있을시 return값으로 업데이트할 펌웨어 정보가 담겨서 옵니다. 디바이스가 구버전일 경우 업데이트 가능한 펌웨어가 여러개일수 있어서 배열 형태로 전달됩니다.",-1),n("p",null,[s("디바이스가 "),n("strong",null,"최신 펌웨어"),s("일경우 빈 [] 배열값이 옵니다.")],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"[")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),s(" int"),n("span",{class:"token punctuation"},","),s("    ")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token property"},'"created_at"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"2025-02-28T06:05:32"'),n("span",{class:"token punctuation"},","),s("  "),n("span",{class:"token comment"},"// firmware 등록 날짜")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token property"},'"firmware_id"'),n("span",{class:"token operator"},":"),s(" int"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// firmware_id")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token property"},'"hardware_id"'),n("span",{class:"token operator"},":"),s(" int"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// hardware_id")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token property"},'"firmware"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"project_id"'),n("span",{class:"token operator"},":"),s(" int"),n("span",{class:"token punctuation"},","),s("  "),n("span",{class:"token comment"},"// project_id")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"name"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Addnox_MP_59781a09.bin"'),n("span",{class:"token punctuation"},","),s("  "),n("span",{class:"token comment"},"// firmware file name")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"description"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"withnox firmware release version 1.0.0"'),n("span",{class:"token punctuation"},","),s("  "),n("span",{class:"token comment"},"// firmware descripiton")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"is_active"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s("  "),n("span",{class:"token comment"},"// firmware active 여부")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"created_at"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"2025-02-28T06:05:31"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),s(" int"),n("span",{class:"token punctuation"},","),s("  "),n("span",{class:"token comment"},"// firmware_id")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"1.0.0"'),n("span",{class:"token punctuation"},","),s("   "),n("span",{class:"token comment"},"// firmware version")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"file_key"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"firmwares/ADDNOX/Addnox_MP_59781a09.bin"'),n("span",{class:"token punctuation"},","),s("  "),n("span",{class:"token comment"},"// s3 file location")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"updated_at"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"2025-02-28T06:05:31"')]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s()]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token property"},'"hardware"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s("  "),n("span",{class:"token comment"},"// hardware 정보")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"name"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"withnox"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"1.0.0"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"is_active"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"updated_at"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"2025-02-28T06:03:15"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),s(" int"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"description"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"withnox release version"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token property"},'"created_at"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"2024-07-01T00:00:00"')]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:l(({value:i,isActive:r})=>a[17]||(a[17]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"401"),n("td",null,"Not authorized user"),n("td",null,"자식 계정을 확인해주세요.")]),n("tr",null,[n("td",null,"403"),n("td",null,"Permission denied"),n("td",null,"유저의 기기가 아닙니다.")]),n("tr",null,[n("td",null,"404"),n("td",null,"Device not found"),n("td",null,"기기를 찾을 수 없습니다.")]),n("tr",null,[n("td",null,"404"),n("td",null,"Firmware not found"),n("td",null,"현재 기기의 펌웨어가 존재하지않습니다.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Permission denied"')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[65]||(a[65]=n("h3",{id:"펌웨어-다운로드하기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#펌웨어-다운로드하기"},[n("span",null,[n("strong",null,"펌웨어 다운로드하기")])])],-1)),a[66]||(a[66]=n("p",null,[s("펌웨어 다운로드를 위해 파일을 요청합니다. "),n("strong",null,"최신 펌웨어 버전 확인하기"),s(" API를 통해 업데이트할 firmware_id값을 얻을 수 있습니다.")],-1)),a[67]||(a[67]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"GET"),s(" /api/v1/addnox/firmware/file/{device_id}/{firmware_id}/{real_user_id} ")],-1)),a[68]||(a[68]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[a[22]||(a[22]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[a[18]||(a[18]=n("code",null,"Authorization",-1)),a[19]||(a[19]=s()),e(t,{type:"danger",text:"required"})]),a[20]||(a[20]=n("td",null,"Bearer",-1)),a[21]||(a[21]=n("td",null,"access_token",-1))])])]),a[69]||(a[69]=n("p",null,[n("strong",null,"Parameters")],-1)),n("table",null,[a[35]||(a[35]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[a[23]||(a[23]=n("code",null,"device_id",-1)),a[24]||(a[24]=s()),e(t,{type:"danger",text:"required"})]),a[25]||(a[25]=n("td",null,"integer",-1)),a[26]||(a[26]=n("td",null,"기기의 id",-1))]),n("tr",null,[n("td",null,[a[27]||(a[27]=n("code",null,"firmware_id",-1)),a[28]||(a[28]=s()),e(t,{type:"danger",text:"required"})]),a[29]||(a[29]=n("td",null,"integer",-1)),a[30]||(a[30]=n("td",null,"다운로드할 펌웨어 id",-1))]),n("tr",null,[n("td",null,[a[31]||(a[31]=n("code",null,"real_user_id",-1)),a[32]||(a[32]=s()),e(t,{type:"danger",text:"required"})]),a[33]||(a[33]=n("td",null,"integer",-1)),a[34]||(a[34]=n("td",null,"자식 계정의 id",-1))])])]),a[70]||(a[70]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">GET /api/v1/addnox/firmware/file/1/1/1 HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),e(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:l(({value:i,isActive:r})=>a[36]||(a[36]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:l(({value:i,isActive:r})=>a[37]||(a[37]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:l(({value:i,isActive:r})=>a[38]||(a[38]=[n("p",null,"AWS S3 정책으로 스토리지의 파일을 직접적으로 전송할 수 없습니다. 대신 pre-signed URL을 통해 서버에서 리다이렉션을 시켜줍니다.",-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},"firmware file stream"),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1),n("ul",null,[n("li",null,[n("p",null,[n("strong",null,"OkHttp")]),n("p",null,"OkHttp는 기본적으로 GET 요청 시 자동으로 리디렉션을 따라갑니다. 즉, 별도의 설정 없이도 서버에서 redirect 응답을 받으면 자동으로 Location 헤더에 지정된 URL로 요청을 전환합니다."),n("p",null,"다만, 만약 자동 리디렉션 처리를 원치 않거나 수동으로 처리하고 싶다면, OkHttpClient를 생성할 때 다음과 같이 followRedirects 옵션을 false로 설정할 수 있습니다:")])],-1),n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java"},[n("pre",null,[n("code",{class:"language-java"},[n("span",{class:"line"},[n("span",{class:"token class-name"},"OkHttpClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},[s("OkHttpClient"),n("span",{class:"token punctuation"},"."),s("Builder")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"followRedirects"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"build"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),n("ul",null,[n("li",null,[n("p",null,[n("strong",null,"Alamofire")]),n("p",null,"Alamofire 역시 기본적으로 URLSession의 동작을 따르기 때문에, GET 요청 시 서버의 리디렉션 응답을 자동으로 따라가게 됩니다. 별도의 설정 없이도 자동 리디렉션이 적용되지만, 만약 리디렉션을 직접 처리하거나 중지하고 싶다면 Session을 생성할 때 redirectHandler를 설정할 수 있습니다."),n("p",null,"예를 들어, 자동 리디렉션을 중지하려면 아래와 같이 사용할 수 있습니다:")])],-1),n("div",{class:"language-swift line-numbers-mode","data-highlighter":"prismjs","data-ext":"swift"},[n("pre",null,[n("code",{class:"language-swift"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"let"),s(" session "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Session"),n("span",{class:"token punctuation"},"("),s("redirectHandler"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Redirector"),n("span",{class:"token punctuation"},"("),s("behavior"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token punctuation"},"."),s("doNotFollow"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab1:l(({value:i,isActive:r})=>a[39]||(a[39]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Invalid firmware"),n("td",null,"현재 펌웨어보다 낮은 버전입니다.")]),n("tr",null,[n("td",null,"401"),n("td",null,"No credentials"),n("td",null,"권한이 만료되었습니다(서버 문의).")]),n("tr",null,[n("td",null,"404"),n("td",null,"Firmware file not found"),n("td",null,"펌웨어 파일이 존재하지않습니다(서버 문의).")]),n("tr",null,[n("td",null,"500"),n("td",null,"Internal server error"),n("td",null,"서버 문의")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Invalid firmware"')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[71]||(a[71]=n("h3",{id:"펌웨어-버전-업데이트하기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#펌웨어-버전-업데이트하기"},[n("span",null,[n("strong",null,"펌웨어 버전 업데이트하기")])])],-1)),a[72]||(a[72]=n("p",null,"OTA 완료 후 현재 디바이스의 펌웨어 버전을 업데이트합니다.",-1)),a[73]||(a[73]=n("div",{class:"api-endpoint"},[n("span",{class:"api-method"},"Patch"),s(" /api/v1/addnox/firmware/update-result/{device_id}/{firmware_id}/{real_user_id} ")],-1)),a[74]||(a[74]=n("p",null,[n("strong",null,"Headers")],-1)),n("table",null,[a[44]||(a[44]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[a[40]||(a[40]=n("code",null,"Authorization",-1)),a[41]||(a[41]=s()),e(t,{type:"danger",text:"required"})]),a[42]||(a[42]=n("td",null,"Bearer",-1)),a[43]||(a[43]=n("td",null,"access_token",-1))])])]),a[75]||(a[75]=n("p",null,[n("strong",null,"Parameters")],-1)),n("table",null,[a[57]||(a[57]=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"description")])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[a[45]||(a[45]=n("code",null,"device_id",-1)),a[46]||(a[46]=s()),e(t,{type:"danger",text:"required"})]),a[47]||(a[47]=n("td",null,"integer",-1)),a[48]||(a[48]=n("td",null,"기기의 id",-1))]),n("tr",null,[n("td",null,[a[49]||(a[49]=n("code",null,"firmware_id",-1)),a[50]||(a[50]=s()),e(t,{type:"danger",text:"required"})]),a[51]||(a[51]=n("td",null,"integer",-1)),a[52]||(a[52]=n("td",null,"업데이트한 펌웨어 id",-1))]),n("tr",null,[n("td",null,[a[53]||(a[53]=n("code",null,"real_user_id",-1)),a[54]||(a[54]=s()),e(t,{type:"danger",text:"required"})]),a[55]||(a[55]=n("td",null,"integer",-1)),a[56]||(a[56]=n("td",null,"자식 계정의 id",-1))])])]),a[76]||(a[76]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">PATCH /api/v1/addnox/firmware/update-result/1/2/1 HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),e(p,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:l(({value:i,isActive:r})=>a[58]||(a[58]=[n("span",{class:"ok-tab"},"200 OK",-1)])),title1:l(({value:i,isActive:r})=>a[59]||(a[59]=[n("span",{class:"error-tab"},"ERROR",-1)])),tab0:l(({value:i,isActive:r})=>a[60]||(a[60]=[n("p",null,"업데이트 완료한 디바이스의 정보를 리턴합니다.",-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"real_user_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"project_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"hardware_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"now_firmware_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"unique_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"serial_code"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"device_alias"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"mac_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"created_at"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"2025-03-06T05:08:06.745Z"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token property"},'"last_log_file_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:l(({value:i,isActive:r})=>a[61]||(a[61]=[n("p",null,[n("strong",null,"오류 응답")],-1),n("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"HTTP status code"),n("th",null,"detail"),n("th",null,"description")])]),n("tbody",null,[n("tr",null,[n("td",null,"400"),n("td",null,"Firmware not matched with device"),n("td",null,"펌웨어 id를 확인해주세요.")])])],-1),n("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[n("pre",null,[n("code",{class:"language-json"},[n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token property"},'"detail"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Firmware not matched with device"')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[77]||(a[77]=o(`<h2 id="공통-에러-처리" tabindex="-1"><a class="header-anchor" href="#공통-에러-처리"><span><strong>공통 에러 처리</strong></span></a></h2><p>모든 엔드포인트에서 공통적으로 응답하는 에러코드입니다.</p><p><strong>Error Response Example</strong></p><ul><li><code>401 Unauthorized</code>: 토큰이 잘못되었습니다.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Could not validate credentials&quot;</span> <span class="token comment">// 토큰이 잘못되었습니다.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>401 Unauthorized</code>: 토큰이 만료되었습니다.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Token is expired&quot;</span> <span class="token comment">// 토큰이 만료되었습니다.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>404 Not Found</code>: 리소스를 찾을 수 없습니다. URI를 다시 확인해주세요.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Resource not found&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>500 Internal Server Error</code>: 서버 에러입니다.<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Internal server error. Please try again later.&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,4))])}const y=d(k,[["render",v]]),f=JSON.parse('{"path":"/api-guide/withnox-addnox/ota.html","title":"OTA","lang":"ko-KR","frontmatter":{},"git":{"updatedTime":1741324605000,"contributors":[{"name":"Jeongtae Kim","username":"","email":"jeongtae.kim@nueyne.com","commits":2}],"changelog":[{"hash":"4c7ef1265ac23a070eaa6f57530c0b755ab952aa","time":1741324605000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"📝 Added addnox survey api documents"},{"hash":"5f9feeb666901cd7ab24d27cf5ce0317414f6913","time":1741237845000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"📝 Added firmware guide docs"}]},"filePathRelative":"api-guide/withnox-addnox/ota.md"}');export{y as comp,f as data};
