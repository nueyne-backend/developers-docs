import{_ as d,c,a as o,e as i,b as s,w as a,d as n,r as u,o as m}from"./app-BlYON7qD.js";const g={};function b(k,e){const r=u("Tabs"),p=u("Badge");return m(),c("div",null,[e[40]||(e[40]=o(`<h1 id="유저" tabindex="-1"><a class="header-anchor" href="#유저"><span><strong>유저</strong></span></a></h1><p>해당 페이지는 Elexir Legacy 프로젝트의 유저와 관련된 API를 설명해놓은 페이지입니다.</p><h2 id="소개" tabindex="-1"><a class="header-anchor" href="#소개"><span><strong>소개</strong></span></a></h2><p>Elexir Legacy 유저 API는 사용자 정보 불러오기, 업데이트 등과 연관된 자식 계정 관련 작업을 수행하는 기능입니다. API를 호출하기전에 인증 페이지를 읽어보시길 추천드립니다.</p><p>API 흐름에 대한 시각적인 흐름도가 필요하다면 <a href="https://www.figma.com/board/4ku2F0sWUBycYZAP5Zo1gZ/Elexir-Legacy-API-Flow?node-id=0-1&amp;p=f&amp;t=2SiQxHwy08Cs6NfT-0" target="_blank" rel="noopener noreferrer">Figma API Flow</a> 페이지를 참고해주세요.</p><h2 id="인증" tabindex="-1"><a class="header-anchor" href="#인증"><span><strong>인증</strong></span></a></h2><p>모든 유저 API는 인증 토큰을 필요로 합니다. 인증을 하기위해서 <code>Authorization</code> header 에 인증 토큰을 넣어서 API를 호출해주세요.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">Authorization: Bearer your_token_here</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>your_token_here</code> 에 인증 과정에서 획득한 access_token으로 대체해주세요.</p><h2 id="엔드포인트" tabindex="-1"><a class="header-anchor" href="#엔드포인트"><span><strong>엔드포인트</strong></span></a></h2><h3 id="이메일-중복-검사" tabindex="-1"><a class="header-anchor" href="#이메일-중복-검사"><span><strong>이메일 중복 검사</strong></span></a></h3><p>회원가입전 이메일 중복 검사를 통해 회원가입 가능 여부를 조회합니다.</p><div class="api-endpoint"><span class="api-method">GET</span> /api/v1/legacy/user/dup-check-email/{email} </div><p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">GET /api/v1/legacy/user/dup-check-email/test@gmail.com HTTPS</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,16)),i(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:l,isActive:t})=>e[0]||(e[0]=[s("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:l,isActive:t})=>e[1]||(e[1]=[s("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:l,isActive:t})=>e[2]||(e[2]=[s("ul",null,[s("li",null,"False는 중복된 이메일이 존재합니다."),s("li",null,"True는 해당 이메일로 회원가입이 가능합니다.")],-1),s("div",{class:"language-bool line-numbers-mode","data-highlighter":"prismjs","data-ext":"bool"},[s("pre",null,[s("code",{class:"language-bool"},[s("span",{class:"line"},"True"),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),tab1:a(({value:l,isActive:t})=>e[3]||(e[3]=[s("p",null,[s("strong",null,"오류 응답")],-1),s("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"HTTP status code"),s("th",null,"detail"),s("th",null,"description")])]),s("tbody",null,[s("tr",null,[s("td",null,"500"),s("td",null,"Internal Server Error"),s("td",null,"서버 에러")])])],-1),s("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[s("pre",null,[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"detail"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Internal Server Error"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),e[41]||(e[41]=o(`<h3 id="전화번호-중복-검사-deprecated" tabindex="-1"><a class="header-anchor" href="#전화번호-중복-검사-deprecated"><span>**전화번호 중복 검사 (Deprecated) **</span></a></h3><p>회원가입전 전화번호 중복 검사를 통해 회원가입 가능 여부를 조회합니다.</p><div class="api-endpoint"><span class="api-method">GET</span> /api/v1/legacy/user/dup-check-phone/{phone} </div><p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">GET /api/v1/legacy/user/dup-check-phone/01012345678 HTTPS</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,6)),i(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:l,isActive:t})=>e[4]||(e[4]=[s("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:l,isActive:t})=>e[5]||(e[5]=[s("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:l,isActive:t})=>e[6]||(e[6]=[s("ul",null,[s("li",null,"False는 중복된 전화번호가 존재합니다."),s("li",null,"True는 해당 전화번호로 회원가입이 가능합니다.")],-1),s("div",{class:"language-bool line-numbers-mode","data-highlighter":"prismjs","data-ext":"bool"},[s("pre",null,[s("code",{class:"language-bool"},[s("span",{class:"line"},"True"),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),tab1:a(({value:l,isActive:t})=>e[7]||(e[7]=[s("p",null,[s("strong",null,"오류 응답")],-1),s("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"HTTP status code"),s("th",null,"detail"),s("th",null,"description")])]),s("tbody",null,[s("tr",null,[s("td",null,"500"),s("td",null,"Internal Server Error"),s("td",null,"서버 에러")])])],-1),s("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[s("pre",null,[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"detail"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Internal Server Error"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),e[42]||(e[42]=s("h3",{id:"유저-정보-가져오기",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#유저-정보-가져오기"},[s("span",null,[s("strong",null,"유저 정보 가져오기")])])],-1)),e[43]||(e[43]=s("p",null,"로그인한 사용자의 정보를 불러옵니다. 응답에서 사용자가 비밀번호를 교체한지 3개월이 지낫는지, 정보 업데이트가 필요한지 여부를 Boolean 값으로 알려줍니다.",-1)),e[44]||(e[44]=s("div",{class:"api-endpoint"},[s("span",{class:"api-method"},"GET"),n(" /api/v1/legacy/user/me ")],-1)),e[45]||(e[45]=s("p",null,[s("strong",null,"Headers")],-1)),s("table",null,[e[12]||(e[12]=s("thead",null,[s("tr",null,[s("th",null,"Name"),s("th",null,"Type"),s("th",null,"description")])],-1)),s("tbody",null,[s("tr",null,[s("td",null,[e[8]||(e[8]=s("code",null,"Authorization",-1)),e[9]||(e[9]=n()),i(p,{type:"danger",text:"required"})]),e[10]||(e[10]=s("td",null,"Bearer",-1)),e[11]||(e[11]=s("td",null,"access_token",-1))])])]),e[46]||(e[46]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">GET /api/v1/legacy/user/me HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),i(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:l,isActive:t})=>e[13]||(e[13]=[s("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:l,isActive:t})=>e[14]||(e[14]=[s("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:l,isActive:t})=>e[15]||(e[15]=[s("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[s("pre",null,[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"email"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"dev@gmail.com"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"phone"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"01012345678"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"username"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"tester123!"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"relation"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"S"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"gender"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"M"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"birthdate"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"1990-01-01"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"gender_real"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'""'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"birthdate_real"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'""'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"social_google_id"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'""'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"social_kakao_id"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'""'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"social_naver_id"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'""'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"social_apple_id"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'""'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"is_marketing_agree"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"is_push_agree"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"country"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"KR"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"id"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"is_email_checked"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"is_active"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"regdate"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"2025-04-07T04:41:13"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"is_blocked"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token boolean"},"false"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"block_type"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"A"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"block_reason"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token null keyword"},"null"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"need_to_pwd_chg"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token boolean"},"false"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"last_pwd_changed_at"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"2025-04-07T04:41:13"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:l,isActive:t})=>e[16]||(e[16]=[s("p",null,[s("strong",null,"오류 응답")],-1),s("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"HTTP status code"),s("th",null,"detail"),s("th",null,"description")])]),s("tbody",null,[s("tr",null,[s("td",null,"401"),s("td",null,"User is None"),s("td",null,"가입된 유저 정보가 없습니다.")]),s("tr",null,[s("td",null,"401"),s("td",null,"User is Deleted"),s("td",null,"회원탈퇴한 유저입니다.")])])],-1),s("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[s("pre",null,[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"detail"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"User is None"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),e[47]||(e[47]=s("h3",{id:"유저-푸시-토큰-설정",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#유저-푸시-토큰-설정"},[s("span",null,[s("strong",null,"유저 푸시 토큰 설정")])])],-1)),e[48]||(e[48]=s("p",null,"유저에게 푸시 알림을 보내기 위해 FCM 토큰을 서버에 저장합니다.",-1)),e[49]||(e[49]=s("div",{class:"api-endpoint"},[s("span",{class:"api-method"},"POST"),n(" /api/v1/legacy/user/push/set-token ")],-1)),e[50]||(e[50]=s("p",null,[s("strong",null,"Headers")],-1)),s("table",null,[e[21]||(e[21]=s("thead",null,[s("tr",null,[s("th",null,"Name"),s("th",null,"Type"),s("th",null,"description")])],-1)),s("tbody",null,[s("tr",null,[s("td",null,[e[17]||(e[17]=s("code",null,"Authorization",-1)),e[18]||(e[18]=n()),i(p,{type:"danger",text:"required"})]),e[19]||(e[19]=s("td",null,"Bearer",-1)),e[20]||(e[20]=s("td",null,"access_token",-1))])])]),e[51]||(e[51]=s("p",null,[s("strong",null,"Body Parameters")],-1)),s("table",null,[e[26]||(e[26]=s("thead",null,[s("tr",null,[s("th",null,"Name"),s("th",null,"Type"),s("th",null,"description")])],-1)),s("tbody",null,[s("tr",null,[s("td",null,[e[22]||(e[22]=s("code",null,"token",-1)),e[23]||(e[23]=n()),i(p,{type:"danger",text:"required"})]),e[24]||(e[24]=s("td",null,"string",-1)),e[25]||(e[25]=s("td",null,"FCM 토큰 값",-1))])])]),e[52]||(e[52]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /api/v1/legacy/user/push/set-token HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line">{</span>
<span class="line">    token: &quot;your token&quot;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),i(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:l,isActive:t})=>e[27]||(e[27]=[s("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:l,isActive:t})=>e[28]||(e[28]=[s("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:l,isActive:t})=>e[29]||(e[29]=[s("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[s("pre",null,[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"statusCode"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"200"),s("span",{class:"token punctuation"},","),n()]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"message"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Set push token successfully"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:l,isActive:t})=>e[30]||(e[30]=[s("p",null,[s("strong",null,"오류 응답")],-1),s("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"HTTP status code"),s("th",null,"detail"),s("th",null,"description")])]),s("tbody",null,[s("tr",null,[s("td",null,"500"),s("td",null,"Internal Server Error"),s("td",null,"서버 에러")])])],-1),s("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[s("pre",null,[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"detail"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Internal Server Error"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),e[53]||(e[53]=s("h3",{id:"유저-계정-탈퇴",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#유저-계정-탈퇴"},[s("span",null,[s("strong",null,"유저 계정 탈퇴")])])],-1)),e[54]||(e[54]=s("p",null,"유저의 계정을 비활성화하는 API입니다. 사용자 계정을 즉시 삭제하지 않고 is_active를 0으로 바꾸는 API입니다.",-1)),e[55]||(e[55]=s("div",{class:"api-endpoint"},[s("span",{class:"api-method"},"DELETE"),n(" /api/v1/legacy/user ")],-1)),e[56]||(e[56]=s("p",null,[s("strong",null,"Headers")],-1)),s("table",null,[e[35]||(e[35]=s("thead",null,[s("tr",null,[s("th",null,"Name"),s("th",null,"Type"),s("th",null,"description")])],-1)),s("tbody",null,[s("tr",null,[s("td",null,[e[31]||(e[31]=s("code",null,"Authorization",-1)),e[32]||(e[32]=n()),i(p,{type:"danger",text:"required"})]),e[33]||(e[33]=s("td",null,"Bearer",-1)),e[34]||(e[34]=s("td",null,"access_token",-1))])])]),e[57]||(e[57]=o(`<p><strong>요청 예시</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">DELETE /api/v1/legacy/user HTTPS</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer your_token_here</span></span></span>
<span class="line">{</span>
<span class="line">    token: &quot;your token&quot;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>응답 예시</strong></p>`,3)),i(r,{data:[{id:'<span class="ok-tab">200 OK</span>'},{id:'<span class="error-tab">ERROR</span>'}]},{title0:a(({value:l,isActive:t})=>e[36]||(e[36]=[s("span",{class:"ok-tab"},"200 OK",-1)])),title1:a(({value:l,isActive:t})=>e[37]||(e[37]=[s("span",{class:"error-tab"},"ERROR",-1)])),tab0:a(({value:l,isActive:t})=>e[38]||(e[38]=[s("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[s("pre",null,[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"statusCode"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"200"),s("span",{class:"token punctuation"},","),n()]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"message"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"User deleted successfully"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:l,isActive:t})=>e[39]||(e[39]=[s("p",null,[s("strong",null,"오류 응답")],-1),s("p",null,"HTTP 상태 코드별로 API 상태 코드와 메시지를 제공합니다. 아래의 표를 참고하세요.",-1),s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"HTTP status code"),s("th",null,"detail"),s("th",null,"description")])]),s("tbody",null,[s("tr",null,[s("td",null,"409"),s("td",null,"User delete failed"),s("td",null,"서버 에러")])])],-1),s("div",{class:"language-json line-numbers-mode","data-highlighter":"prismjs","data-ext":"json"},[s("pre",null,[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"detail"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"User delete failed"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1})])}const h=d(g,[["render",b]]),y=JSON.parse('{"path":"/api-guide/elexir-legacy/user.html","title":"유저","lang":"ko-KR","frontmatter":{},"git":{"updatedTime":1745555866000,"contributors":[{"name":"Jeongtae Kim","username":"","email":"jeongtae.kim@nueyne.com","commits":6}],"changelog":[{"hash":"21f7a3cb06764e144ee1c8253f7e2f0c21a2aea1","time":1745555866000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨legacy 유저 삭제 문서"},{"hash":"d4067338cf5940eaa5436afbe2346a301b1aa1b2","time":1745468190000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"🚑️ user/me 문서 수정"},{"hash":"6ab5c3469a2122566c9ebb2e314f18e0b43900d1","time":1745306289000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"🚑️ 일렉시아 1.0 오류 코드 수정 및 회원가입 API 파라미터 수정"},{"hash":"323c34ab5db65db4ee49be0e03d490161c26c80c","time":1744787651000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"오타 수정"},{"hash":"0836c6cf2630822ec765ea2d7afd268ffa7aff22","time":1744678113000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ Added elexir legacy device, auth, user api page"},{"hash":"89c5c558cbd5ba2001bdd244cbf70e085c810185","time":1744005724000,"email":"jeongtae.kim@nueyne.com","author":"Jeongtae Kim","message":"✨ 일렉시아 1.0 API 추가"}]},"filePathRelative":"api-guide/elexir-legacy/user.md"}');export{h as comp,y as data};
